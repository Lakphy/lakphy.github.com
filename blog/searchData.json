[{"title":"在stm32单片机上使用printf","url":"/blog/2020/11/19/在stm32单片机上使用printf/","content":"\n对于C语言的初学者来说，最熟悉的大概是printf输出函数了，STM32单片机一般使用C语言编程，那么如何在STM32单片机中使用printf呢\n\n# 准备工作\n\n## 硬件\n\n这里使用STM32F401CCUx作为演示\n\njlink——用于烧录单片机以及串口通信测试\n\n## 软件\n\nSTM32CubeMX\n\nKeil\n\n（基于HAL库进行开发）\n\n串口调试助手\n\n### 关于串口调试助手\n\n串口调试助手建议下载微软应用商店里的，名字就是叫串口调试助手\n\n![image-20201119081033946](./image-20201119081033946.png)\n\n图标就是这个样子\n\n#### FAQ\n\n- 为什么我的微软应用商店打不开？\n\n- 因为种种我也不知道什么原因，微软的服务器在部分网咯下访问速度十分缓慢（装vs2019的小盆友应该能够感受到，所以建议使用手机热点开流量下载，这样会快一些\n\n  \n\n# 开始~~抄代码~~配置您的printf函数\n\n## 背景知识\n\n在stm32单片机中，printf函数是无法打印到控制台的。为了让这个函数能实现打印功能，我们必须要把这个函数重定向，让它重定向到串口中，把要输出的内容打印到串口中。为此需要以下几步。\n\n## 新建一个工程\n\n（老玩家请跳过）\n\n首先打开STM32CubeMX\n\n![image-20201119081658850](./image-20201119081658850.png)\n\n点击画圈部分新建一个工程\n\n![image-20201119081804461](./image-20201119081804461.png)\n\n选择我们要用的开发板STM32F401CCUx\n\n![image-20201119082114912](./image-20201119082114912.png)\n\n之后开始配置时钟\n\n先打开高速陶瓷晶振\n\n![image-20201119083719006](./image-20201119083719006.png)\n\n找到上方的Clock Configuration\n\n配置时钟，配置成果如图\n\n![image-20201119083907695](./image-20201119083907695.png)\n\n## 配置串口\n\n打开它的1号串口（请确保您的PA9和PA10引脚未被占用，后面会作说明）\n\n![image-20201119082402308](./image-20201119082402308.png)\n\n之后您会在右边的芯片示意图上看到串口1的引脚被占用，表示串口1已开启\n\n![image-20201119082612484](./image-20201119082612484.png)\n\n即可知PA9和PA10为串口1的引脚，PA9为TX，PA10为RX，请记住这个引脚名，之后需要使用\n\n可以在界面的中间下部看到串口1的控制台\n\n![image-20201119082859857](./image-20201119082859857.png)\n\n这里对控制台的一些基本设置做出解释，之后做串口通信时您需要对这些数据进行统一，否则会有非常鬼畜的现象（\n\n| 名称        | 用途                                   |\n| ----------- | -------------------------------------- |\n| Baud Rate   | 波特率，一般都为115200，有时也有用9600 |\n| Word Length | 数据位，一般为8                        |\n| Parity      | 校验位，一般为None                     |\n| Stop Bits   | 停止位，一般为1，有的地方称为One       |\n\n我们这里全部使用默认参数配置\n\n## 代码\n\n完成以上配置之后\n\n进入上方标签的project manager\n\n设置project name和project location\n\n之后找到这个东西\n\n![image-20201119084245670](./image-20201119084245670.png)\n\n改成![image-20201119084301138](./image-20201119084301138.png)\n\n点击右上角GENERATE CODE\n\n![image-20201119084050798](./image-20201119084050798.png)\n\n完成之后点击open project，在keil中打开项目\n\n打开main.c，在这个绿色位置\n\n![image-20201119101532465](./image-20201119101532465.png)\n\n准备插入代码，这里说明一下，在使用CubeMX做开发时，我们的代码要写在注释USER CODE BEGIN和USER CODE END位置，防止下次更新代被覆盖\n\n我们继续下一步操作，在上面说的位置插入代码\n\n```c\n#include \"stdio.h\"\n#ifdef __GNUC__\n#define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)\n#else\n#define PUTCHAR_PROTOTYPE int __io_putchar(int ch)\n#endif\nPUTCHAR_PROTOTYPE\n{\n    HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1 , 0xffff);\n    return ch;\n}\n```\n\n此代码将printf重定向到串口输出\n\n至此，~~教程结束~~\n\n# 测试\n\n## 代码\n\n在main.c的主函数main()里面有一段这样的代码\n\n![image-20201119085407904](./image-20201119085407904.png)\n\n我们在USER CODE END WHILE之前写我们的测试代码\n\n举个栗子\n\n```c\nprintf(\"Lakphy\");\nHAL_Delay(500);\n```\n\n这里的HAL_Delay是加一个延迟，防止串口通信频率太高卡死\n\n就是酱紫\n\n![image-20201119101703801](./image-20201119101703801.png)\n\n## 接线\n\n这里给出jlink接线方式\n\n下面是烧写程序用的\n\n| jlink | stm32 |\n| ----- | ----- |\n| GND   | GND   |\n| 3.3V  | 3V3   |\n| CLK   | SCK   |\n| SWO   | DIO   |\n\n下面是串口通信用的\n\n| jlink | stm32 | 意义 |\n| ----- | ----- | ---- |\n| TXD   | PA10  | RX   |\n| RXD   | PA9   | TX   |\n\n亲测可以同时接在一起，没有任何问题\n\n实物图\n\n![1605751787507](./1605751787507.jpg)\n\n## 烧录\n\n先进行一些必要的设置\n\n![image-20201119102121174](./image-20201119102121174.png)\n\n这一排东西\n\n找到\n\n![image-20201119102146596](./image-20201119102146596.png)\n\n这个按钮\n\n点击进入options\n\n![image-20201119102221026](./image-20201119102221026.png)这里，改一下\n\n改成这样（可选操作）\n\n![image-20201119102546026](./image-20201119102546026.png)\n\n可以明显提升编译速度\n\n看见这一排没有\n\n![image-20201119102626917](./image-20201119102626917.png)\n\n点Debug，找到这里\n\n![image-20201119102648641](./image-20201119102648641.png)\n\n改成我们的jlink\n\n![image-20201119102704659](./image-20201119102704659.png)\n\n然后点下面的ok保存设置\n\n看到左上角一排按键有没有\n\n![image-20201119101730251](./image-20201119101730251.png)\n\n再放大\n\n![image-20201119101752181](./image-20201119101752181.png)\n\n左数第二个是编译，第三个是全部编译，右数第一个是烧录\n\n一般第一次打开项目或者你出现莫名其妙bug时候都要用全部编译，其他都是直接编译就行了。如果不怕费时间直接每次都全部编译也没有问题（\n\n编译之后下面显示类似这样表示编译正常，没有错误\n\n![image-20201119102911942](./image-20201119102911942.png)\n\n重点是这个\n\n![image-20201119102929897](./image-20201119102929897.png)\n\n~~众所周知 Warnings都没啥用~~\n\n然后点烧录\n\n![image-20201119103101164](./image-20201119103101164.png)\n\n可能提示这个\n\n![image-20201119103224227](./image-20201119103224227.png)\n\n不理会\n\n​\t然后看到下面这个\n\n![image-20201119103250347](./image-20201119103250347.png)\n\n继续等待\n\n出现这个\n\n![image-20201119103316615](./image-20201119103316615.png)\n\n表明烧录成功\n\n## 观察实验现象\n\n不要断开jlink，打开串口调试助手\n\n回忆我们之前在CubeMX做的配置\n\n![image-20201119082859857](./image-20201119082859857.png)\n\n将其应用到串口调试助手\n\n![image-20201119113849949](./image-20201119113849949.png)\n\n这样\n\n发现我们的参数和串口调试助手默认的一样，所以本次实验可以直接打开串口，无需配置\n\n点击打开串口，可以看到右侧输出我们的printf内容\n\n![image-20201119114159068](./image-20201119114159068.png)\n\n# 结尾\n\n至此教程结束\n\n有兴趣小盆友可以根据我之前的代码研究一下HAL库的串口通信函数，自己实现一个scanf","tags":["STM32单片机"]},{"title":"STM32外接DAC模块MCP4725","url":"/blog/2020/10/31/STM32外接DAC模块MCP4725/","content":"我最近在使用STM32F411CEU最小系统板做开发，但发现它并不自带DAC数模转换模块，所以我选择外接DAC模块MCP4725\n\n## 准备材料\n\n#### STM32系列开发板\n我这里对MCP4725的使用方法理论上都是通用的，所以对芯片的要求并不严格。\n我使用STM32F411CEU\n它拥有最高100MHz的主频，[官方文档](https://www.st.com/resource/en/reference_manual/dm00119316-stm32f411xc-e-advanced-arm-based-32-bit-mcus-stmicroelectronics.pdf)\n![STM32F411CEU](1.jpg)\n\n### MCP4725数模转换模块\nMCP4725价格低廉，使用I2C接口（拉了拉了）\n[官方文档](http://ww1.microchip.com/downloads/en/devicedoc/22039d.pdf)\n![MCP4725 Breakout](2.jpg)\n\n### 面包板杜邦线若干\n众所周知，杜邦线是会自己消失的\n\n## 代码\n在cubemx中打开I2C接口\n在项目文件夹内`/Core/lnc/`内建立文件`MCP4725.h`，代码如下\n```c\n//MCP4725 Driver\n#ifndef INC_MCP4725_H_\n#define INC_MCP4725_H_\n\n#include \"stdint.h\"\n#include \"stm32f4xx_hal.h\"\n\n#define MCP4725_ADDRESS     0xc0\n#define MCP4725_READ        0x01\n#define MCP4725_DAC         0x40\n#define MCP4725_DAC_EEPROM  0x60\n\nvoid MCP4725_Out(I2C_HandleTypeDef *hi2c,uint16_t outputValue,uint8_t writeMode);\n\n#endif /* INC_MCP4725_H_ */\n```\n这里需要注意一下，根据官方文档，为了使一块板子上可以使用更多个MCP4725，MCP4725的A0引脚可以选择上拉或者下拉，当下拉时，MCP4725的地址为0x60，上拉时为0x61，不拉时默认下拉。我这里使用默认下拉0x60地址，抄代码时请按需修改。\n在项目文件夹内`/Core/Src/`内建立文件`MCP4725.c`，代码如下\n```c\n//MCP4725 Driver\n\n#include \"MCP4725.h\"\n#include \"stdint.h\"\n\nvoid MCP4725_Out(I2C_HandleTypeDef *hi2c,uint16_t outputValue,uint8_t writeMode){\n    uint8_t buffer[3]={0x00};\n\t\tuint32_t flag=0;\n    if(writeMode==1){\n        buffer[0]=MCP4725_DAC_EEPROM;\n    }\n    else{\n        buffer[0]=MCP4725_DAC;\n    }\n\toutputValue=outputValue * 4096 / 3300.0f;//3300表示标准电压3.3v，按需修改\n    buffer[1]=(outputValue/16);\n    buffer[2]=(outputValue%16)<<4;\n\n    flag=HAL_I2C_Master_Transmit(hi2c,MCP4725_ADDRESS,buffer,3,1000);\n\n    HAL_Delay(1);\n}\n```\n下一步在主函数中做出修改\n加入头文件\n```c\n#include \"MCP4725.h\"\n#include \"MCP4725.c\"\n```\n调用实例\n```c\nMCP4725_Out(&hi2c1,2000,1)//在i2c1接口的MCP4725上输出2000mv电压\n```\n\n## 总结\n这款MCP4725模块价格实惠，但i2c接口实在拉跨。以上教程实现了傻瓜式调用，总结一句就是\n> 有手就行","tags":["STM32单片机"]},{"title":"OI心(wu)得(dao)","url":"/blog/2020/10/06/oi心得/","content":"还有几天就是2020年NOIp初赛了，想起来我都快有两年没打OI了，这里分享一点小小的oi心(wu)得(dao)\n\n---\n\n模拟只会猜题意,贪心只能过样例; 数学上来先打表,\n\nDP一般看规律. 组合数学靠运气,计算几何瞎暴力;\n\n图论强行套模板,数论只会GCD.\n\n递归递推伤不起,搜索茫然TLE;\n\n分治做得像枚举,暴力枚举数第一.\n\n数据结构干瞪眼,怒刷水题找信心;\n\n涨姿势也不容易,考试一来全懵逼!\n\n---\n\nAC: Answer Correct 正确的答案\n\nCE:Compile Easily 轻松地通过编译\n\nPC: Pass Compile 通过编译\n\nWA:Wonerful Answer 极好的答案\n\nRE:Right Enough 过于正确\n\nTLE: Time Limit Enough 时间充裕\n\nMLE: Memory Limit Enough 内存充裕\n\nOLE: Output Limit Enough 输出充裕\n\nUKE: Unknown Exactness 不明情况的正确\n\n---\n\n骗分过样例， 暴力出奇迹。 数学先打表， ＤＰ看运气。\n\n穷举ＴＬＥ， 递推ＵＫＥ。 模拟ＭＬＥ， 贪心还ＣＥ。\n\n想要骗到分， 就要有方法。 图论背模板， 数论背公式。\n\n动规背方程， 高精背代码。 如果都没背， 干脆输样例。\n\n---\n\n![](oi.gif)","tags":["OI"]},{"title":"Arduino鬼畜电子琴制作","url":"/blog/2020/10/04/Arduino鬼畜电子琴制作/","content":"由于某些原因，我又拿出了我的Arduino开发板，这次准备制作一个完整的电子琴。没有意外的话，这应该是我最后一次做Arduino了。\n# 正式开始前的准备\n### 明确需求\n1. 能演奏基本音符\n2. 能演奏高低音\n3. 能通过显示设备输出当前音符\n4. 能够自动演奏\n\n### 硬件准备\n\n#### 开发板\n这次仍然采用经典的 Arduino Uno 开发板，相关说明在我之前的博客中有提及，这里不做描述。\n\n#### 发声设备\n为便于研究(lan)，这次采用的是无源蜂鸣器作为发声设备，同样，我在之前博客中有提及，这里不描述。\n\n#### 显示设备\n我的显示设备采用LCD 1602，使用spi接口，可以大幅降低成本（但会占用大量GPIO）\n![LCD 1602](1.jpg)\n\n#### 其他\n1. 杜邦线若干（众所周知，杜邦线是会自己消失的 /确信）\n2. 适量面包板\n3. 10个10k欧电阻（用于制作下拉电路）\n4. 11个按键\n\n# 制作\n\n### 绘制电路图\n\n#### 工具\n我使用[fritzing](https://fritzing.org/)制作电路图\n\n#### LCD1602接线\n为节约GPIO，我采用四线接法，为方便接线，我把六根线全挂在An GPIO上面，接线表如下\n\n| LCD1602 | PIN |\n| ------------: | :------------ |\n| VSS      | GND           |\n| VDD      | 5V            |\n| V0       | 电位器中间引脚 |\n| RS       | A0            |\n| RW       | GND           |\n| E        | A1            |\n| D0       | /             |\n| D1       | /             |\n| D2       | /             |\n| D3       | /             |\n| D4       | A2            |\n| D5       | A3            |\n| D6       | A4            |\n| D7       | A5            |\n| A        | 5V            |\n| K        | GND           |\n\n#### 关于开关按键的电路\n经过我的多次实践发现，若按键直接接INPUT接口，且开发板上接有无源蜂鸣器，会出现按键莫名改变状态的问题。\n经过约一周的收集资料及咨询大佬，终于发现了问题。\n问题关键是INPUT接口的高低电平不确定。目前存在两种解决方案：\n1. 设置芯片INPUT接口内部上拉\n2. 在按键外部部分设置外部下拉电路\n\n##### 方案一 内部上拉\n故名思意，内部上拉，就是在芯片内部将这个GPIO的电平调至高电平，先不管芯片内部是怎么实现的这一功能，对于我们来说，这个功能只需要一行代码就能解决，所以这是最简单的解决方案。\n代码说明：\n原来的INPUT接口初始化代码如下\n```C++\npinMode(11, INPUT);\n```\n我们现在要将其改为\n```c++\npinMode(11, INPUT_PULLUP);\n```\n即可实现内部上拉。\n但因为我可能在某宝买到了假的Uno开发板，我没能实现内部上拉，所以我选择了外部下拉。\n\n##### 方案二 外部下拉\n既然是外部，电路自然不同，原本的开关电路将要改成下图样式\n![外部下拉电路简图](2.jpg)\n以咱可怜的高中物理水平就不强行解释这个电路原理了（\n\n#### 成果图\n![成果电路图](3.jpg)\n\n### 采购元件\n这里推荐淘宝上的优信电子\n\n### 代码部分\n我需要先定义各个音符及其高低音的发声频率\n```c++\n#define Do_l 262\n#define re_l 294\n#define mi_l 330\n#define fa_l 349\n#define so_l 392\n#define la_l 440\n#define si_l 494\n#define Do 523\n#define re 587\n#define mi 659\n#define fa 698\n#define so 784\n#define la 880\n#define si 932\n#define Do_h 1046\n#define re_h 1175\n#define mi_h 1318\n#define fa_h 1397\n#define so_h 1568\n#define la_h 1760\n#define si_h 1976\n```\n然后开始制作标准音及混音发声\n目前我找到了一个很难受的土制混音方案，就是每隔一毫秒换一次音，缺点就是声音很沙哑，有点抖。\n为实现无限叠加混音，我使用了如下代码\n```c++\n    while (1) {\n      int normalTones[8] = {};\n      int num = 0;\n      //get button state\n      button0 = digitalRead(2);\n      button1 = digitalRead(3);\n      button2 = digitalRead(4);\n      button3 = digitalRead(5);\n      button4 = digitalRead(6);\n      button5 = digitalRead(7);\n      button6 = digitalRead(8);\n      button7 = digitalRead(9);\n      button8 = digitalRead(10);\n      button9 = digitalRead(11);\n      if (button0 == HIGH) {\n        normalTones[num] = Do;\n        num++;\n      }\n      if (button1 == HIGH) {\n        normalTones[num] = re;\n        num++;\n      }\n      if (button2 == HIGH) {\n        normalTones[num] = mi;\n        num++;\n      }\n      if (button3 == HIGH) {\n        normalTones[num] = fa;\n        num++;\n      }\n      if (button4 == HIGH) {\n        normalTones[num] = so;\n        num++;\n      }\n      if (button5 == HIGH) {\n        normalTones[num] = la;\n        num++;\n      }\n      if (button6 == HIGH) {\n        normalTones[num] = si;\n        num++;\n      }\n      normalTones[num] = 0;\n      if (num == 0) {\n        //lcd print\n        lcd.setCursor(0, 1);\n        lcd.print(\"Welcome!        \");\n      }\n      else if (num == 1) {\n        if (normalTones[0] == Do) {\n          //lcd print\n          lcd.setCursor(0, 1);\n          lcd.print(\"Do (C)          \");\n        }\n        else if (normalTones[0] == re) {\n          //lcd print\n          lcd.setCursor(0, 1);\n          lcd.print(\"Re (D)          \");\n        }\n        else if (normalTones[0] == mi) {\n          //lcd print\n          lcd.setCursor(0, 1);\n          lcd.print(\"Mi (E)          \");\n        }\n        else if (normalTones[0] == fa) {\n          //lcd print\n          lcd.setCursor(0, 1);\n          lcd.print(\"Fa (F)          \");\n        }\n        else if (normalTones[0] == so) {\n          //lcd print\n          lcd.setCursor(0, 1);\n          lcd.print(\"So (G)          \");\n        }\n        else if (normalTones[0] == la) {\n          //lcd print\n          lcd.setCursor(0, 1);\n          lcd.print(\"La (A)          \");\n        }\n        else if (normalTones[0] == si) {\n          //lcd print\n          lcd.setCursor(0, 1);\n          lcd.print(\"Si (B)          \");\n        }\n      }\n      else{\n          //lcd print\n          lcd.setCursor(0, 1);\n          lcd.print(\"MIX             \");\n      }\n      for (int i = 0; i < 8; i++) {\n        if (normalTones[i] == 0) break;\n        tone(13, normalTones[i]);\n        delay(1);\n      }\n      if (num == 0) break;\n    }\n```\n这里说明一下几个函数\n```c++\nlcd.setCursor(0, 1);//设置打印字符光标位置为第二行第一个\nlcd.print();//打印括号内的字符\ndelay(1);//延时1ms\ntone();//发声函数，需要传递两个参数，一个参数为发声脚，一个为频率\ndigitalRead();//获取按键状态，当被按下时为HIGH\n```\n\n### 完整代码\n```c++\n#include <LiquidCrystal.h>\n/*\nThis programme was produced by Lakphy.\nIt is prohibited to use these code for illegal purposes.\nWelcome to visit the private site of Lakphy:\nInternational channel: lakphy.me\n        China channel: lakphy.gitee.io\n                Email: lakphy@outlook.com\nThanks for the help of the seniors of SAST !\nThanks for open source ! \n*/\n#define Do_l 262\n#define re_l 294\n#define mi_l 330\n#define fa_l 349\n#define so_l 392\n#define la_l 440\n#define si_l 494\n#define Do 523\n#define re 587\n#define mi 659\n#define fa 698\n#define so 784\n#define la 880\n#define si 932\n#define Do_h 1046\n#define re_h 1175\n#define mi_h 1318\n#define fa_h 1397\n#define so_h 1568\n#define la_h 1760\n#define si_h 1976\n// vss   vcc   v0   rs   rw   e   db0   db1   db2   db3   db4   db5   db6   db7   led+   led-\n//                  a0        a1  \\     \\     \\     \\     A2    A3    A4    A5\nint button0 = LOW;\nint button1 = LOW;\nint button2 = LOW;\nint button3 = LOW;\nint button4 = LOW;\nint button5 = LOW;\nint button6 = LOW;\nint button7 = LOW;\nint button8 = LOW;\nint button9 = LOW;\nLiquidCrystal lcd(A0, A1, A2, A3, A4, A5);\nint music[] = {\n  so_l, so_l, la_l, so_l, Do  , si_l,\n  so_l, so_l, la_l, so_l, re  , Do  ,\n  so_l, so_l, so  , mi  , Do  , si_l, so_l,\n  fa  , fa  , mi  , Do  , re  , Do\n};\nint times[] = {\n  200, 200, 400, 400, 400, 800,\n  200, 200, 400, 400, 400, 800,\n  400, 400, 400, 400, 400, 400, 400,\n  400, 200, 400, 400, 400, 800\n};\nvoid setup() {\n  // setup lcd\n  lcd.begin(16, 2);\n  lcd.print(\"Lakphy Singer :)\");\n  lcd.setCursor(0, 1);\n  lcd.print(\"Hello!          \");\n  // setup keyboard\n  pinMode(2, INPUT);\n  pinMode(3, INPUT);\n  pinMode(4, INPUT);\n  pinMode(5, INPUT);\n  pinMode(6, INPUT);\n  pinMode(7, INPUT);\n  pinMode(8, INPUT);\n  pinMode(9, INPUT);\n  pinMode(10, INPUT);\n  pinMode(11, INPUT);\n  //setup tones\n  pinMode(13, OUTPUT);\n  noTone(13);\n}\n\nvoid loop() {\n  bool canRun = 1;\n  //get button state\n  button0 = digitalRead(2);\n  button1 = digitalRead(3);\n  button2 = digitalRead(4);\n  button3 = digitalRead(5);\n  button4 = digitalRead(6);\n  button5 = digitalRead(7);\n  button6 = digitalRead(8);\n  button7 = digitalRead(9);\n  button8 = digitalRead(10);\n  button9 = digitalRead(11);\n\n  //high\n  if (button7 == HIGH) {\n\n    if (button0 == HIGH) {\n      //lcd print\n      lcd.setCursor(0, 1);\n      lcd.print(\"Do_h (C)        \");\n      //sing\n      tone(13, Do_h);\n      delay(50);\n      while (1) {\n        if (digitalRead(2) != HIGH) break;\n        delay(10);\n      }\n      noTone(13);\n    }\n    //re\n    if (button1 == HIGH) {\n      //lcd print\n      lcd.setCursor(0, 1);\n      lcd.print(\"Re_h (D)        \");\n      tone(13, re_h);\n      delay(50);\n      while (1) {\n        if (digitalRead(3) != HIGH) break;\n        delay(10);\n      }\n      noTone(13);\n    }\n    //mi\n    if (button2 == HIGH) {\n      //lcd print\n      lcd.setCursor(0, 1);\n      lcd.print(\"Mi_h (E)        \");\n      tone(13, mi_h);\n      delay(50);\n      while (1) {\n        if (digitalRead(4) != HIGH) break;\n        delay(10);\n      }\n      noTone(13);\n    }\n    //fa\n    if (button3 == HIGH) {\n      //lcd print\n      lcd.setCursor(0, 1);\n      lcd.print(\"Fa_h (F)        \");\n      tone(13, fa_h);\n      delay(50);\n      while (1) {\n        if (digitalRead(5) != HIGH) break;\n        delay(10);\n      }\n      noTone(13);\n    }\n    //so\n    if (button4 == HIGH) {\n      //lcd print\n      lcd.setCursor(0, 1);\n      lcd.print(\"So_h (G)        \");\n      tone(13, so_h);\n      delay(50);\n      while (1) {\n        if (digitalRead(6) != HIGH) break;\n        delay(10);\n      }\n      noTone(13);\n    }\n    //la\n    if (button5 == HIGH) {\n      //lcd print\n      lcd.setCursor(0, 1);\n      lcd.print(\"La_h (A)        \");\n      tone(13, la_h);\n      delay(50);\n      while (1) {\n        if (digitalRead(7) != HIGH) break;\n        delay(10);\n      }\n      noTone(13);\n    }\n    //si\n    if (button6 == HIGH) {\n      //lcd print\n      lcd.setCursor(0, 1);\n      lcd.print(\"Si_h (B)        \");\n      tone(13, si_h);\n      delay(50);\n      while (1) {\n        if (digitalRead(8) != HIGH) break;\n        delay(10);\n      }\n      noTone(13);\n    }\n  }\n\n  //low\n  else if (button8 == HIGH) {\n\n    if (button0 == HIGH) {\n      //lcd print\n      lcd.setCursor(0, 1);\n      lcd.print(\"Do_l (C)        \");\n      //sing\n      tone(13, Do_l);\n      delay(50);\n      while (1) {\n        if (digitalRead(2) != HIGH) break;\n        delay(10);\n      }\n      noTone(13);\n    }\n    //re\n    if (button1 == HIGH) {\n      //lcd print\n      lcd.setCursor(0, 1);\n      lcd.print(\"Re_l (D)        \");\n      tone(13, re_l);\n      delay(50);\n      while (1) {\n        if (digitalRead(3) != HIGH) break;\n        delay(10);\n      }\n      noTone(13);\n    }\n    //mi\n    if (button2 == HIGH) {\n      //lcd print\n      lcd.setCursor(0, 1);\n      lcd.print(\"Mi_l (E)        \");\n      tone(13, mi_l);\n      delay(50);\n      while (1) {\n        if (digitalRead(4) != HIGH) break;\n        delay(10);\n      }\n      noTone(13);\n    }\n    //fa\n    if (button3 == HIGH) {\n      //lcd print\n      lcd.setCursor(0, 1);\n      lcd.print(\"Fa_l (F)        \");\n      tone(13, fa_l);\n      delay(50);\n      while (1) {\n        if (digitalRead(5) != HIGH) break;\n        delay(10);\n      }\n      noTone(13);\n    }\n    //so\n    if (button4 == HIGH) {\n      //lcd print\n      lcd.setCursor(0, 1);\n      lcd.print(\"So_l (G)        \");\n      tone(13, so_l);\n      delay(50);\n      while (1) {\n        if (digitalRead(6) != HIGH) break;\n        delay(10);\n      }\n      noTone(13);\n    }\n    //la\n    if (button5 == HIGH) {\n      //lcd print\n      lcd.setCursor(0, 1);\n      lcd.print(\"La_l (A)        \");\n      tone(13, la_l);\n      delay(50);\n      while (1) {\n        if (digitalRead(7) != HIGH) break;\n        delay(10);\n      }\n      noTone(13);\n    }\n    //si\n    if (button6 == HIGH) {\n      //lcd print\n      lcd.setCursor(0, 1);\n      lcd.print(\"Si_l (B)        \");\n      tone(13, si_l);\n      delay(50);\n      while (1) {\n        if (digitalRead(8) != HIGH) break;\n        delay(10);\n      }\n      noTone(13);\n    }\n  }\n  else if (button9 == HIGH) {\n    if (canRun) {\n      //lcd print\n      lcd.setCursor(0, 1);\n      lcd.print(\"Auto Singing....\");\n      for (int x = 0; x < 25; x++)\n      {\n        if (!canRun) break;\n        if (music[x] == 0) {\n          noTone(13);\n        }\n        else {\n          tone(13, music[x]);\n        }\n        delay(times[x]);//节拍延时\n        //digitalWrite(ledpin,LOW);\n        noTone(13);\n      }\n      canRun = 0;\n    }\n    //lcd print\n    lcd.setCursor(0, 1);\n    lcd.print(\"Singing END !   \");\n  }\n  //\n  //\n  //\n  //normal tone\n  /*\n    //Do\n    else if (button0 == HIGH) {\n    //lcd print\n    lcd.setCursor(0, 1);\n    lcd.print(\"Do (C)          \");\n    //sing\n    tone(13, Do);\n    delay(50);\n    while (1) {\n      if (digitalRead(2) != HIGH) break;\n      delay(10);\n    }\n    noTone(13);\n    }\n    //re\n    else if (button1 == HIGH) {\n    //lcd print\n    lcd.setCursor(0, 1);\n    lcd.print(\"Re (D)          \");\n    tone(13, re);\n    delay(50);\n    while (1) {\n      if (digitalRead(3) != HIGH) break;\n      delay(10);\n    }\n    noTone(13);\n    }\n    //mi\n    else if (button2 == HIGH) {\n    //lcd print\n    lcd.setCursor(0, 1);\n    lcd.print(\"Mi (E)          \");\n    tone(13, mi);\n    delay(50);\n    while (1) {\n      if (digitalRead(4) != HIGH) break;\n      delay(10);\n    }\n    noTone(13);\n    }\n    //fa\n    else if (button3 == HIGH) {\n    //lcd print\n    lcd.setCursor(0, 1);\n    lcd.print(\"Fa (F)          \");\n    tone(13, fa);\n    delay(50);\n    while (1) {\n      if (digitalRead(5) != HIGH) break;\n      delay(10);\n    }\n    noTone(13);\n    }\n    //so\n    else if (button4 == HIGH) {\n    //lcd print\n    lcd.setCursor(0, 1);\n    lcd.print(\"So (G)          \");\n    tone(13, so);\n    delay(50);\n    while (1) {\n      if (digitalRead(6) != HIGH) break;\n      delay(10);\n    }\n    noTone(13);\n    }\n    //la\n    else if (button5 == HIGH) {\n    //lcd print\n    lcd.setCursor(0, 1);\n    lcd.print(\"La (A)          \");\n    tone(13, la);\n    delay(50);\n    while (1) {\n      if (digitalRead(7) != HIGH) break;\n      delay(10);\n    }\n    noTone(13);\n    }\n    //si\n    else if (button6 == HIGH) {\n    //lcd print\n    lcd.setCursor(0, 1);\n    lcd.print(\"Si (B)          \");\n    tone(13, si);\n    delay(50);\n    while (1) {\n      if (digitalRead(8) != HIGH) break;\n      delay(10);\n    }\n    noTone(13);\n    }\n  */\n  else {\n    while (1) {\n      int normalTones[8] = {};\n      int num = 0;\n      //get button state\n      button0 = digitalRead(2);\n      button1 = digitalRead(3);\n      button2 = digitalRead(4);\n      button3 = digitalRead(5);\n      button4 = digitalRead(6);\n      button5 = digitalRead(7);\n      button6 = digitalRead(8);\n      button7 = digitalRead(9);\n      button8 = digitalRead(10);\n      button9 = digitalRead(11);\n      if (button0 == HIGH) {\n        normalTones[num] = Do;\n        num++;\n      }\n      if (button1 == HIGH) {\n        normalTones[num] = re;\n        num++;\n      }\n      if (button2 == HIGH) {\n        normalTones[num] = mi;\n        num++;\n      }\n      if (button3 == HIGH) {\n        normalTones[num] = fa;\n        num++;\n      }\n      if (button4 == HIGH) {\n        normalTones[num] = so;\n        num++;\n      }\n      if (button5 == HIGH) {\n        normalTones[num] = la;\n        num++;\n      }\n      if (button6 == HIGH) {\n        normalTones[num] = si;\n        num++;\n      }\n      normalTones[num] = 0;\n      if (num == 0) {\n        //lcd print\n        lcd.setCursor(0, 1);\n        lcd.print(\"Welcome!        \");\n      }\n      else if (num == 1) {\n        if (normalTones[0] == Do) {\n          //lcd print\n          lcd.setCursor(0, 1);\n          lcd.print(\"Do (C)          \");\n        }\n        else if (normalTones[0] == re) {\n          //lcd print\n          lcd.setCursor(0, 1);\n          lcd.print(\"Re (D)          \");\n        }\n        else if (normalTones[0] == mi) {\n          //lcd print\n          lcd.setCursor(0, 1);\n          lcd.print(\"Mi (E)          \");\n        }\n        else if (normalTones[0] == fa) {\n          //lcd print\n          lcd.setCursor(0, 1);\n          lcd.print(\"Fa (F)          \");\n        }\n        else if (normalTones[0] == so) {\n          //lcd print\n          lcd.setCursor(0, 1);\n          lcd.print(\"So (G)          \");\n        }\n        else if (normalTones[0] == la) {\n          //lcd print\n          lcd.setCursor(0, 1);\n          lcd.print(\"La (A)          \");\n        }\n        else if (normalTones[0] == si) {\n          //lcd print\n          lcd.setCursor(0, 1);\n          lcd.print(\"Si (B)          \");\n        }\n      }\n      else{\n          //lcd print\n          lcd.setCursor(0, 1);\n          lcd.print(\"MIX             \");\n      }\n      for (int i = 0; i < 8; i++) {\n        if (normalTones[i] == 0) break;\n        tone(13, normalTones[i]);\n        delay(1);\n      }\n      if (num == 0) break;\n    }\n  }\n\n  //delay\n  noTone(13);\n}\n```\n\n# 成品图\n![成品图](singer.jpg)\n","tags":["Arduino"]},{"title":"联想 YOGA 14S 开箱评测","url":"/blog/2020/08/20/联想-YOGA-14S-开箱评测/","content":"\n联想YOGA 14S这款电脑被联想鸽了又鸽，改了又改，但性价比还是很高，我于八月初买了这台笔记本\n[京东链接](https://item.m.jd.com/product/53673115658.html?wxa_abtest=o&gx=RnFhkmFZaDGLy9RJ_t83BYE&ad_od=share&utm_source=androidapp&utm_medium=appshare&utm_campaign=t_335139774&utm_term=CopyURL\n)\n# 先说说外观\n这款笔记本的ACD面是金属的，很有质感，用起来相当舒服，虽说没有联想的yoga系列本应该有的高端血统，但明显比联想的低端小新系列要强很多\n\n180度展开图:\n![](2.jpg)\n这里说明一下，官方并没有说过这机器支持180度展开，所以能不能完全180度展开这完全看命了\n\nC面：键盘很有质感，很舒服\n![](3.jpg)\n\nB面显示屏：高色域 60Hz 1080p\n![](4.jpg)\n\nD面：\n![](5.jpg)\n\nA面\n![](6.jpg)\n\n侧面接口\n![](7.jpg)\n![](8.jpg)\n\n# 关于配置\n由于AMD的高性价比芯片，这款电脑整体性价比也非常高，我的购入价是5099，现在好像还涨价了\n\n### 芯片\n联想YOGA 14S采用AMD锐龙R7 4800U芯片，8核16线程，7nm制程，无论是参数还是跑分，都算得上是今年上半年最强低压U了吧\n8核16线程对我这种经常开一堆窗口的直男来说非常有用，7nm制程的耗电和发热都很低，就像我现在，用vscode码字，后台开文件管理器和chrome，D面基本感觉不到热，风扇我日常使用基本都不转。\n但也有一点小缺点，就是在某些不支持多核加速的编译器上，单核性能明显不足，不过既然都低压U轻薄本了，还在乎它的编译速度吗？\n\n### 显卡\n这款电脑使用的是集成显卡，显卡这方面确实拉跨，不过比英特尔的核显强这是肯定的，日常使用没啥问题，平时用ps时候偶尔会有些卡顿，玩游戏就。。。。\n不过作为一个八辈子不玩电脑游戏，玩电脑游戏就打开赛尔号的憨憨，这确实影响没多大影响，我还是觉得电脑游戏没啥意思，不是说觉得电脑游戏做的烂，主要没那感觉，没有手游或者switch玩的顺手，以后我要想打游戏就玩手游，或者攒钱买个破解版3ds也够，电脑还是感觉不舒服。\n\n### 内存\n16GB 双通道 32bit 4266MHz频率 LPDDR4 内存，感觉这个配置相当不错，毕竟AMD的芯片比较吃内存频率，比起隔壁华为的2666，提升的不是一点半点。\n\n### 硬盘\n512GB硬盘，这个据说和首发有出入，不过满足使用\n\n### 网卡\n支持Wifi6好评\n\n### 屏幕\n联想祖传高色域屏好评\n\n### 电源\n60wh能用8h以上，对我这种从来不插电的人来说很方便。\n使用65wPD快充，速度快，但发热比较大\n\n### 屏幕解锁\n这款电脑不支持指纹解锁，但支持Windows Hello面部识别，我觉得Windows Hello比指纹识别更好用，很多小细节做的不错，比如注视不锁屏、离开锁屏、人体感知，这些做的不错，总之就这么说吧，Windows Hello配合开盖开机，我几乎没按过电源键，全都是自动操作。\n\n\n# 实际体验\n使用体验很不错，但16:10屏幕的效率确实不高，有钱建议买华为祖传3:2高色域2k触屏，那个更舒服\n\n# 槽点\n### 品控辣鸡\n买之前就看见网上说品控不行，平均换货四五次，所以我从京东买的，毕竟京东售后比较好嘛\n我换了一次货，因为部分键位是坏的，再发来时候虽然也不怎么如意，但不影响使用我就没再计较，应该也是通病\n#### 1、转轴有点歪\n这个就是偶尔看的时候有点难受，勉强接受吧\n#### 2、屏幕油腻\n这个倒是通病，近看会有油腻感觉，远看不影响\n![](9.jpg)\n#### 3、键盘有磕碰\n这个应该是我这台自己问题了，但怕再换来问题更大的，就没换，反正不影响使用\n看图吧：\n![](10.jpg)\n#### 4、D面按压会响\n![](11.jpg)\n就是这种，按压会有响声\n#### 5、屏幕弯曲\n这个应该是磁吸合盖的锅，合上盖时候，屏幕中间上下可以贴死，但两侧会翘起来一点，就像一本用了很长时间的日记本中间用绳子绑起来一样\n\n# 结尾\n![](12.jpg)","tags":["开箱评测"]},{"title":"这个小米巨能写它香吗","url":"/blog/2020/03/21/这个小米巨能写它香吗/","content":"年前慕名买了一盒小米巨能写，小米之家现货一盒9.9十支，用来体验一下非常不错。\n如果像我一样只想体验一下的话建议线下小米之家买，因为线上两盒起购，邮费十元，实在太坑。\n# 先看看官方说明\n [小米商城链接](https://m.mi.com/commodity/detail/9836)\n其实也没什么，就是一直强调便宜，油墨好，墨量大，就这三点，这里不引用官网大篇幅海报了\n\n# 评测\n我已使用巨能写很长时间，下面说一下体验\n\n## 流畅度\n巨能写的流畅度做的很不错，虽然和日本中性笔相比相差十万八千里，但在国产五元以下中性笔里可以说是无敌了（当然这里不考虑晨光优品那种偏科生，偏的不是一般偏，没法用）。\n\n## 悬空漏墨\n就是说不盖笔帽，笔尖向下放置一段时间是否漏墨\n这个方面做得还不错，完胜三菱UM100。\n但是三菱UM100就这一个缺点啊。。。。。\n\n## 墨量\n巨能写出墨略微有些冲，和三菱UM100一个量级的出墨，这个我喜欢\n\n## 耐摔\n巨能写非常不耐摔，笔尖摔过以后出墨量以及流畅度都有不同程度的影响，这种影响取决于摔笔时的作用力\n\n# 书写比较\n这里看张图吧\n![](5.jpg)\n左列画圆圈对比\n中列书写对比\n右列墨水拖影对比\n\n这里科普一下，画圈圈对比是我长期使用三菱UM100总结出来的判断笔尖好坏的方法，三菱UM100众所周知一摔就坏，通过画圈圈的方法可以找到损坏位置，然后避免书写时用损坏处，可以延长坏笔寿命。\n还有墨水拖影这个是比较墨水色差，这个在百乐V系笔和三菱笔之间可以看出非常明显色差\n\n# 开箱图？\n![](2.jpg)\n![](3.jpg)\n![](1.jpg)\n![](4.jpg)\n\n# 总结\n小米巨能写性价比可以说无敌，但用途不广，它并不能替代我的三菱中性笔，尽管它足够便宜。它适用于对文字美观要求不高，对写字速度要求不高的场景，由于笔尖落后非常影响美观，另外使用时间长或者速度较快会有非常明显的疲劳感（官方说可以写一本圆周率，真是可怜小米实验室测试员工了）。在学习中，巨能写可以承担一些简单的工作，比如写练习册什么的，抄课文这个工程量大，会引起疲劳，如果财力不旺盛还是用巨能写好，但疲劳这个后果需要提前知道，另外考试可不能用巨能写，你的努力成果怎么能押在九毛九的笔身上，怎么说也得上个3块以上，我一般是5块的三菱um100（话说我刚入笔坑时候um100才3.5RMB啊）\n","tags":["中性笔"]},{"title":"muSpider__QQ音乐榜单下载器","url":"/blog/2020/03/20/muSpider__QQ音乐榜单下载器/","content":"\n# 关于muSpider\n\n这是一个QQ音乐榜单爬取程序\n\n包括付费音乐已经被隐藏的音乐，凡是在榜单上且QQ音乐服务器有存储的音乐都可以爬取\n\n破解了时间和数量的限制\n\n开源位置：\n\n[muSpider仓库](https://GitHub.com/lakphy/muSpider)\n\n声明： 仅供学习交流使用，转发请注明出处\n\n为保证所有使用者利益，请控制使用频率！！！\n\n## 目录\n - [快速开始](#快速开始)\n - [FAQ(常见问题及解答)](#faq常见问题及解答)\n - [可以爬取的榜单](#可以爬取的榜单)\n - [榜单适配进度](#榜单适配进度)\n - [参与适配榜单](#参与适配榜单)\n\n## 快速开始\n\n### 必要的准备\n\n环境：Python\n\n版本：>=3.5\n\n相关库安装：对于大部分用户，一般情况不需要安装多余的库\n\n若您使用过程中出现了因缺少库产生的问题，尝试在 shell / cmd / Powershell 中运行以下命令以安装缺少的库\n\n```shell\npip insatll urllib\npip insatll time\npip insatll requests\npip install sys\npip insatll os\npip insatll datetime\npip insatll random\npip insatll pip\n```\n\n### 开始运行\n\n前往[muSpider仓库](https://GitHub.com/lakphy/muSpider)下载仓库zip文件(或克隆仓库)并解压\n\n在文件所在目录打开 shell / cmd / Powershell 运行\n\n```\npython music.py\n```\n\n即可开始爬取QQ音乐榜单\n\n### 关于使用密码 (此功能已废除)\n\n为防止被搬运，软件内设有动态密码验证，变化周期为小时\n\n动态密码计算公式：\n\n```python\nkey = str(int(int(datetime.date.today().strftime('%y%m%d'))%10+(int(datetime.date.today().strftime('%y%m%d'))%1000-int(datetime.date.today().strftime('%y%m%d'))%100)/100+(int(datetime.date.today().strftime('%y%m%d'))%100000-first%10000)/10000))+str(datetime.datetime.now().hour%10)+str((int(datetime.date.today().strftime('%y%m%d'))%10+datetime.datetime.now().hour%10)%10)\n```\n\n公式解释：\n\n密码为三个数字的组合，中间无间隔；\n\n第一个数为 当前月份的个位数 + 当前日期的个位数 + 当前年份的个位数；\n\n第二个数为 当前小时数的个位数\n\n第三个数为 ( 当前小时的个位数 + 当前日期的个位数 ) 除以10的余数\n\n## FAQ(常见问题及解答)\n\n问：运行中间出现突然报错跳出？\n\n答：可能是因为代理服务器不稳定或者您的网络不稳定所致，建议检测网络并重新打开程序\n\n\n\n## 可以爬取的榜单\n\n- [x] 流行指数榜\n\n- [x] 欧美榜\n\n- [x] 内地榜\n\n- [x] iTunes榜\n\n- [x] 香港地区榜\n\n- [x] 台湾地区榜\n\n- [x] 美国公告牌榜\n\n- [x] 英国UK榜\n\n- [x] YouTube榜\n\n- [ ] 抖音排行榜\n\n- [ ] 网络歌曲榜\n\n- [ ] 电音榜\n\n- [ ] 说唱榜\n\n- [ ] ACG新歌榜\n\n- [ ] 达人音乐榜\n\n- [ ] K歌金曲榜\n\n- [ ] JOOX本地热播榜\n\n- [ ] 台湾KKBOX榜\n\n## 榜单适配进度\n\n由于每个榜单的爬取规则不同，请求参数不同，所以需要人工适配每一个榜单，工作量不小\n\n学业繁忙，无法全部适配，望谅解\n\n## 参与适配榜单\n\n您不需要会编程即可参与适配\n\n如果想要参与适配，您需要具备以下能力：\n\n- 会进行网络抓包\n- 能够分析抓包内容\n\n仅需要这两样能力，您便可以贡献适配榜单\n\n目前，我可以为您提供以下信息以减轻贡献适配榜单的工作量：\n\n- 目标网页 [https://y.qq.com/n/yqq/toplist/4.html](https://y.qq.com/n/yqq/toplist/4.html)\n- 包含榜单音乐id的文件为 musicu.fcg文件\n- 上述大约在网页打开后3000-5000ms内出现\n\n贡献者需要向我提供以下内容\n\n- 请求url及参数\n- 返回内容分析方法\n\n贡献方式\n\n1. 通过邮箱发给我，可以在[我的网站](https://lakphy.github.io)找到我的邮箱\n\n2. 在仓库下发布 issue\n\n3. 通过各种可以联系到我本人的方式\n\n","tags":["Python"]},{"title":"生活可以被疫情影响，但我们绝不能被疫情打败。","url":"/blog/2020/03/20/生活可以被疫情影响，但我们绝不能被疫情打败。/","content":"> 生活可以被疫情影响，但我们绝不能被疫情打败。      -----雷军__2020年小米10发布会\n\n随着国内疫情的逐渐好转，也快到该上学的时间了，此时正是我需要倍加努力的时间。\n\n由于疫情影响，高三的开学延期了一个多月，虽有网络教学，但效果始终不理想，刚开始第一周可能效果还行，但第二周效果下降就很严重了，有个经常给电脑刷机的同学说第二周有三个同学在问他怎么给电脑刷机。。。。这效果我觉得不必说了吧。\n\n距离高考还有78天，此时我对于未来充满恐慌，本应该刻苦奋斗都一个月因为疫情耽误白白荒废，我该如何应对接下来的学习。\n\n距离全市第一次统一模拟考试还有20天左右的时间，这是第一次高考前大型考试，但由于疫情推迟，这可能也是最后一次。这二十天里我应该加倍努力学习，尽管暂时还不能开学。耽误了这么长时间，该奋斗一波了，欠的总是要还的，只有更大倍数的努力，才能填平之前耽搁下的坑。\n\n疫情是病魔，但不是心魔，它是用来磨砺内心的，不是用来摧毁内心的\n\n正如文题，雷军所说\n> 生活可以被疫情影响，但我们绝不能被疫情打败。\n\n![小米10发布会](1.jpg)\n\n我不会被疫情打败，我愿在疫情环境下磨砺自己！\n\n希望我下次再看这篇博文时我的成绩能有不小的提升！\n\n也希望其他小伙伴们不管你是否高考，都不要被疫情打败，希望疫情过后能看到更强大的你我！\n\n\n","tags":["精神食粮"]},{"title":"手机市场究竟会不会消失","url":"/blog/2020/03/04/手机市场究竟会不会消失/","content":"近期很火的这个新闻，华为余承东在2015年3月4日称手机市场将会在三到五年内消失，而今天正是余承东预言中的最后限期，手机公司不仅没有消失，还越做越好，以小米一加欧珀为首的国产手机更是扬名中外，越做越好\n今天我们就来讨论一下手机市场究竟会不会消失\n[余承东原新闻链接](https://tech.qq.com/a/20150304/049924.htm)\n# 手机市场会不会消失\n不会，不仅不会消失，甚至有可能长期存在\n手机的发明让人们的生活更加便捷，经过数十年的发展，手机已经不只是一个通讯工具了，而是发展到稳定形态的智能工具，已经完全融入现代人们的生活当中，这种稳定将会持续相当一段时间\n# 什么样的产品最终会代替手机\n现阶段无法预测什么样设备可以替代手机\n有人可能会说可穿戴设备，但是，可穿戴设备为考虑便携性等等方面，使用低功耗芯片及小电池，这样的设计注定了可穿戴设备只能作为分终端使用，不能作为主终端\n作为便携设备，云终端方案不可行，一方面云终端节约不了多大体积，另一方面云终端限制很多，没网就凉了。\n有人可能会说使用华为的分布式方案，但分布式方案对分终端的性能需求比主终端方案更高，更耗电，想象一下，你不带手机，但是你的手表，耳机，眼镜，都要和你的手机一样重，保守点说，手机的一半重量，一半的体积，你能接受吗，光你的鼻托就受不了，当然谷歌glass通过夹紧头解决压力问题，但还是不够完美。\n就目前看，最完美解决方案还是手机作为主终端，可穿戴设备分布在身体各处，他们只需要一个小型芯片和小型电池就可以运行，数据全部交给手机处理，由此可看出，手机现阶段无法被替代\n# 替代手机的设备应当有什么样的功能\n最低需求接受比手机功能多，使用场景更多\n这也是可穿戴设备弊端，可穿戴设备功能少，使用场景少，手机使用场景非常多，毕竟一个屏幕，没有形态限制，配合生态变态的Linux，你想干什么都可以，甚至当电脑用都没有任何问题","tags":["数码"]},{"title":"MarkDown语法使用","url":"/blog/2020/03/04/MarkDown语法使用/","content":"\\`行内代码块\\`\n`这是行内代码块`\n代码块\n\\`\\`\\`\n这里是代码块\n\\`\\`\\`\n```\n这里是代码块\n```\n\\*斜体\\*\n*这是斜体字*\n\\*\\*粗体字\\*\\*\n**这是粗体**\n标题\n\\#一级标题\n\\#\\#二级标题\n\\#\\#\\#三级标题\n\\#\\#\\#\\#四级标题\n\\#\\#\\#\\#\\#五级标题\n\\#\\#\\#\\#\\#\\#六级标题\n分隔线\n\\*\\*\\* 或者 \\-\\-\\-\n***\n---\n\\~\\~删除线\\~\\~\n~~这个文本被划去~~\n链接\n```\n[链接文字](链接地址 \"链接标题\")\n```\n插入图片\n```\n![图片说明](图片链接 \"图片标题\")\n```\n插入视频\n```html\n<script src=\"/js/youtube-autoresizer.js\"></script>\n<iframe width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/HfElOZSEqn4\" frameborder=\"0\" allowfullscreen></iframe>\n```\n插入音频，使用插件hexo-tag-aplayer，语法如下：\n```\n{% aplayer title author url [picture_url, narrow, autoplay, width:xx%, lrc:xxx] %}\n```\n转义符\n\\\\\n引用\n\\>\n>引用了一句话\n\n使用 \\[\\^\\1\\] \\[\\^\\1\\]\\: 的脚注对来表示\n```\nHere is a footnote reference,[^1] and another.[^longnote]\n\n[^1]: Here is the footnote.\n\n[^longnote]: Here's one with multiple blocks.\n    Subsequent paragraphs are indented to show that they\n    belong to the previous footnote.\n```\nHere is a footnote reference,[^1] and another.[^longnote]\n\n[^1]: Here is the footnote.\n\n[^longnote]: Here's one with multiple blocks.\n    Subsequent paragraphs are indented to show that they\n    belong to the previous footnote.\n无序列表\n```\n+ 无序列表项 一\n\t- 子无序列表 一\n\t- 子无序列表 二\n\t\t* 子无序列表 三\n+ 无序列表项 二\n+ 无序列表项 三\n```\n+ 无序列表项 一\n\t- 子无序列表 一\n\t- 子无序列表 二\n\t\t* 子无序列表 三\n+ 无序列表项 二\n+ 无序列表项 三\n\n有序列表\n```\n1. 有序列表项 一\n\t1. 子有序列表项 一\n\t2. 子有序列表项 二\n2. 有序列表项 二\n3. 有序列表项 三\n```\n1. 有序列表项 一\n\t1. 子有序列表项 一\n\t2. 子有序列表项 二\n2. 有序列表项 二\n3. 有序列表项 三\n\n绘制表格格式如下，| 控制分列，- 控制分行，: 控制对齐方式。\n```\n| Item     | Value     | Qty   |\n| :------- | --------: | :---: |\n| Computer | 1600 USD  | 5     |\n| Phone    | 12 USD    | 12    |\n| Pipe     | 1 USD     | 234   |\n```\n| Item     | Value     | Qty   |\n| :------- | --------: | :---: |\n| Computer | 1600 USD  | 5     |\n| Phone    | 12 USD    | 12    |\n| Pipe     | 1 USD     | 234   |\n\n关于LaTeX公式，这个比较复杂，不解释，搜索引擎解决","tags":["踩坑记录"]},{"title":"用Arduino开发板演奏音乐","url":"/blog/2020/02/21/用Arduino开发板演奏音乐/","content":"\n本篇介绍如何使用Arduino开发板配合无源蜂鸣器演奏音乐\n\n制作前警告：请先通过搜索补充基础的音乐简谱知识，这些知识并不难，我也是现学的；另外需要很好的耐心，因为要输很多音符和拍子，最后调试拍速也很麻烦\n\n# 材料准备\n\n## Arduino UNO开发板\n\n这是Arduino最经典的开发板之一，本篇全部内容在此开发板上完成\n\n![Arduino UNO](uno.jpg)\n\n相关链接\n\n[Arduino官网](https://arduino.cc/)\n\n[Arduino UNO 开发板的官方介绍](https://store.arduino.cc/usa/arduino-uno-rev3)\n\n## Arduino IDE\n\n用于写入程序，Arduino IDE支持的平台很多，在安卓，webAPP，MacOS，Linux，Windows都有相应版本，本质是一样的，哪个平台都可以编译。\n\n![ArduinoIDE](ide.jpg)\n\n我使用的是GNU/Linux平台的ArduinoIDE\n\n## 蜂鸣器\n\n蜂鸣器是一种电子发声元器件，可以发出\"beep\"的声音。采用直流电压供电，广泛应用于计算机、打印机、复印机、报警器、电子玩具、汽车电子设备、电话机、定时器等电子产品中作发声器件。\n\n蜂鸣器分为有源蜂鸣器和无源蜂鸣器两种。\n\n有源蜂鸣器： 内部带有震荡源，只要一通电就会发出固定频率的声音。有源蜂鸣器特点是分正负极，正反电阻不同，类似二极管。\n\n![有源蜂鸣器](you.jpg)\n\n无源蜂鸣器：内部不带震荡源，需要使用2KHz到5KHz的脉冲信号驱动发声，声音频率可变。特点是不区分正负极，正反电阻相同，本质就是一个电磁铁驱动铁片发声。\n\n![无源蜂鸣器](wu.jpg)\n\n## LED灯（可选）\n\n我这里为了增强效果使用LED灯，可以不用\n\n## 电池\n\n略\n\n## 电路图\n\n![接线图](board.jpg)\n\n# 程序实现\n\n## 定义蜂鸣器发声\n\n### 预定义\n\n为方便录入蜂鸣器发声频率，我们预定义了七个音符的中音和低音频率以及零音符\n\n![简谱音符频率对照表](1.png)\n\n我要使用的音乐只有中音和低音，所以我只定义了中音和低音，代码如下：\n\n```C++\n#define Do 262    //1\n#define Re 294    //2\n#define Mi 330    //3\n#define Fa 349    //4\n#define Sol 392   //5\n#define La 440    //6\n#define Si 494    //7\n#define Do_h 523  //1\n#define Re_h 587  //2\n#define Mi_h 659  //3\n#define Fa_h 698  //4\n#define Sol_h 784 //5\n#define La_h 880  //6\n#define Si_h 988  //7\n#define No 0\n```\n\n### 录入简谱\n\n以下是我要录入的歌曲 归去来兮 的简谱\n\n![归去来兮简谱](music.jpg)\n\n这里有个好玩的事，因为录入量很大（约375个音符）所以我继之前创新了“让Python帮我写JavaScript”以及“让JavaScript帮我写Web”的写法，我又创新了“让Python帮我写C”（Arduino基本语法与C类似，从C转到Arduino没什么压力），下面这个是代替我录入音符的Python\n\n```Python\n#!/usr/bin/python3\n# -*- coding: utf-8 -*-\ntotx=\"\"\ntoty=\"\"\ntotz=\"\"\nwhile True:\n\tb=''\n\tx=input(\"x=\")\n\tif str(x)==\"exit\":\n\t\tprint('yes')\n\t\tdoc = open('out.txt','w')\n\t\tdoc.write(totx)\n\t\tdoc.close()\n\tif str(x)==\"1\":\n\t\tb=\"Do_h\"\n\telif str(x)==\"2\":\n\t\tb=\"Re_h\"\n\telif str(x)==\"3\":\n\t\tb=\"Mi_h\"\n\telif str(x)==\"4\":\n\t\tb=\"Fa_h\"\n\telif str(x)==\"5\":\n\t\tb=\"Sol_h\"\n\telif str(x)==\"6\":\n\t\tb=\"La_h\"\n\telif str(x)==\"7\":\n\t\tb=\"Si_h\"\n\telif str(x)==\"10\":\n\t\tb=\"Do\"\n\telif str(x)==\"20\":\n\t\tb=\"Re\"\n\telif str(x)==\"30\":\n\t\tb=\"Mi\"\n\telif str(x)==\"40\":\n\t\tb=\"Fa\"\n\telif str(x)==\"50\":\n\t\tb=\"Sol\"\n\telif str(x)==\"60\":\n\t\tb=\"La\"\n\telif str(x)==\"70\":\n\t\tb=\"Si\"\n\telif str(x)==\"0\":\n\t\tb=\"No\"\n\ta=b\n\ttotx+=a\n\ttotx+=\",\"\ndoc = open('out.txt','w')\ndoc.write(totx)\ndoc.write(\"\\n\\n\\n\")\ndoc.write(toty)\ndoc.write(\"\\n\\n\\n\")\ndoc.write(totz)\ndoc.write(\"\\n\\n\\n\")\n\n#x=input(\"\")\n```\n\n这个Python写的不好，连跳出都没有，仅仅临时使用，想关就强关就行了\n\n另外再科普一下音符高低音看法\n\n![高低音标志](2.jpg)\n\n以及零音符意义\n\n![零音符](3.jpg)\n\n录入以后的音符是这样子：\n\n```C++\nint16_t scale[] = {\n  La   , Do_h , Mi_h , Sol  , Sol  , Sol  , Re_h , Mi_h , Do_h , La   ,\n  La   , La   , Mi_h , Mi_h , Do_h , Re_h , Do_h , Re_h , Do_h , Mi_h , Mi_h , Do_h ,\n  Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , Mi_h , Fa_h , Mi_h ,\n  La   , La   , Mi_h , Mi_h , Do_h , Re_h , Do_h , Re_h , Do_h , Mi_h , Mi_h , Do_h ,\n  Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , La   , La   ,\n  La_h , La_h , La_h , Mi_h , Do_h , Re_h , Do_h , Re_h , Do_h , Mi_h , Mi_h , Do_h ,\n  Re_h , Do_h , Re_h , Do_h , Re_h , Re_h , Do_h , Re_h , Re_h , Mi_h , Sol_h, Mi_h ,\n  La   , La   , Mi_h , Mi_h , Do_h , Re_h , Do_h , Re_h , Do_h , Mi_h , Mi_h , Do_h ,\n  Re_h , Do_h , Re_h , Re_h , Do_h , Re_h , Re_h , Re_h , Do_h , Re_h , La   ,\n  La   , La_h , Mi_h , Re_h , Mi_h , Re_h , Do_h , Re_h , Do_h , Re_h , Sol_h, Mi_h ,\n  La   , Mi_h , Re_h , Do_h , Mi_h , Re_h , Do_h , Re_h , Mi_h , Re_h , Do_h , La   ,\n  La   , La_h , Mi_h , Re_h , Mi_h , Re_h , Do_h , Re_h , Do_h , Re_h , Sol_h, Mi_h ,\n  La   , Mi_h , Re_h , Do_h , Mi_h , Re_h , Do_h , Re_h , Mi_h , Re_h , Do_h , La   ,\n  No   , La   , Do_h , Re_h , Mi_h , Re_h , Mi_h , Mi_h , No   , La   , Do_h ,\n  Re_h , Mi_h , Re_h , Do_h , Do_h , No   , La   , Do_h , Re_h , Mi_h , Re_h , Mi_h , Mi_h , No   , La   , Do_h , Re_h , Mi_h , Re_h , Do_h , Do_h ,\n  La   , La   , Mi_h , Mi_h , Do_h , Re_h , Do_h , Re_h , Do_h , Mi_h , Mi_h , Do_h ,\n  Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , Mi_h , Fa_h , Mi_h ,\n  La   , La   , Mi_h , Mi_h , Do_h , Re_h , Do_h , Re_h , Do_h , Mi_h , Mi_h , Do_h ,\n  Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , La   ,\n  La_h , La_h , La_h , Mi_h , Do_h , Re_h , Do_h , Re_h , Do_h , Mi_h , Mi_h , Do_h ,\n  Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , Mi_h , Fa_h , Mi_h ,\n  La   , La   , Mi_h , Mi_h , Do_h , Re_h , Do_h , Re_h , Do_h , Mi_h , Mi_h , Do_h ,\n  Re_h , Do_h , Re_h , Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , La   ,\n  La   , La_h , Mi_h , Re_h , Mi_h , Re_h , Do_h , Re_h , Do_h , Re_h , Sol_h, Mi_h ,\n  La   , Mi_h , Re_h , Do_h , Mi_h , Re_h , Do_h , Re_h , Mi_h , Re_h , Do_h , La   ,\n  La   , La_h , Mi_h , Re_h , Mi_h , Re_h , Do_h , Re_h , Do_h , Re_h , Sol_h, Mi_h ,\n  La   , Mi_h , Re_h , Do_h , Mi_h , Re_h , Do_h , Re_h , Mi_h , Re_h , Do_h , La   ,\n  La   , La_h , Mi_h , Re_h , Mi_h , Re_h , Do_h , Re_h , Do_h , Re_h , Sol_h, Mi_h ,\n  La   , Mi_h , Re_h , Do_h , Mi_h , Re_h , Do_h , Re_h , Mi_h , Re_h , Do_h , La   ,\n  La   , La_h , Mi_h , Re_h , Mi_h , Re_h , Do_h , Re_h , Do_h , Re_h , Sol_h, Mi_h ,\n  La   , Mi_h , Re_h , Do_h , Mi_h , Re_h , Do_h , Re_h , Mi_h , Re_h , Do_h , La\n};\n```\n\n另外解释一下为什么用\"int16_t\"，因为音符太多，会超内存，如果用默认32位int定义整形会浪费内存（ArduinoUNO的存储为4kb）\n\n### 定义节拍\n\n音乐中每个音时长不同，这个也要定义\n\n简谱中节拍定义：\n\n![节拍](4.jpg)\n\n这个节拍我们后面会乘一个固定系数即为延迟，这取决于音乐本身速度，应该是和简谱左上角的几个字有关，自己听原版调也可以\n\n定义节拍我也做了辅助录入的Python脚本\n\n```Python\n#!/usr/bin/python3\n# -*- coding: utf-8 -*-\ntotx=\"\"\ntoty=\"\"\ntotz=\"\"\nwhile True:\n\tb=''\n\tx=input(\"x=\")\n\tif str(x)==\"exit\":\n\t\tprint('yes')\n\t\tdoc = open('out.txt','w')\n\t\tdoc.write(totx)\n\t\tdoc.close()\n\tif str(x)==\"1\":\n\t\tb=\"0.25\"\n\telif str(x)==\"2\":\n\t\tb=\"0.5\"\n\telif str(x)==\"3\":\n\t\tb=\"1\"\n\telif str(x)==\"4\":\n\t\tb=\"2\"\n\ta=b\n\ttotx+=a\n\ttotx+=\",\"\n```\n\n录入后效果如下:\n\n```C++\nint8_t durt[] =\n{\n  2, 2, 2, 2, 8, 2, 2, 2, 2, 8,\n  2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4,\n  2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4,\n  2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1,\n  1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2,\n  2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1,\n  1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 8, 2, 2, 2, 2, 8, 4, 4, 8,\n  2, 2, 2, 2, 8, 4, 4, 8, 2, 2, 2, 2, 8, 4, 4, 8, 2, 2, 2, 2, 8,\n  2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4,\n  2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4,\n  2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4,\n  2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1,\n  1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 1\n};\n```\n\n这里我们用了int8_t，定义成8位整数，这样能节约一半以上内存（我一开始用浮点数定义，内存直接爆了）\n\n## 全局变量\n\n上面的蜂鸣器发声定义使用的是全局变量，下面再定义其他必须全局变量\n\n定义发声针脚为A0\n\n```C++\nint tonepin = A0;\n```\n\n定义长度，后面要用\n\n```C++\nint length;\n```\n\n## 初始化程序\n\n此程序用于初始化开发板\n\n初始化了发声针脚以及亮灯针脚并将所有针脚设定为零电势以保障安全\n\n```C++\nvoid setup()\n{\n  pinMode(tonepin, OUTPUT);//设置发声脚\n  pinMode(A2, OUTPUT);//设置LED输出脚\n  digitalWrite(A2, LOW);//设置输出脚电势\n  pinMode(A3, OUTPUT);//同上\n  digitalWrite(A3, LOW);\n  pinMode(A4, OUTPUT);\n  digitalWrite(A4, LOW);\n  pinMode(A5, OUTPUT);\n  digitalWrite(A5, LOW);\n  for (int i = 1; i <= 13; i++) {\n    pinMode(i, OUTPUT);\n    digitalWrite(i, LOW);\n  }\n  length = sizeof(scale) / sizeof(scale[0]);//定义音乐长度\n}\n```\n\n## 循环播放音乐主程序\n\n先看API：\n\nnoTone(tonepin);//停止发声\n\ntone(tonepin, scale[x]);//发声，参数一发声脚，参数二频率\n\ndigitalWrite(i, HIGH);//用于修改LED输出脚电势，参数一输出脚，参数二电势（LOW为低电势，一般理解为零电势，HIGH为高电势，具体电势不明）\n\ndelay(a);//延时，参数为毫秒数\n\n代码如下：\n\n```C++\nvoid loop()\n{\n  for (int x = 0; x < length; x++)\n  {\n    if (scale[x] == 0) {\n      noTone(tonepin);\n    }\n    else{\n      tone(tonepin, scale[x]);\n    }\n    //digitalWrite(ledpin,HIGH);\n    for (int i = 1; i <= 13; i++) {\n      if (i % 4 == 1) {\n        digitalWrite(i, HIGH);\n      }\n    }\n    digitalWrite(A3, LOW);\n    digitalWrite(A5, HIGH);\n    for (int i = 1; i <= 13; i++) {\n      if (i % 4 == 3) {\n        digitalWrite(i, LOW);\n      }\n    }\n    delay(750 * durt[x] / 4);//节拍延时\n    //digitalWrite(ledpin,LOW);\n    for (int i = 1; i <= 13; i++) {\n      if (i % 4 == 1) {\n        digitalWrite(i, LOW);\n      }\n    }\n    digitalWrite(A5, LOW);\n    digitalWrite(A3, HIGH);\n    for (int i = 1; i <= 13; i++) {\n      if (i % 4 == 3) {\n        digitalWrite(i, HIGH);\n      }\n    }\n    delay(150 * durt[x] / 4);//节拍延时\n    noTone(tonepin);\n  }\n  delay(3000);\n}\n```\n\n# 开始使用\n\n至此，你的开发板已可以唱歌，全部代码如下（伸手党请看这里）\n\n```C++\n#define Do 262    //1\n#define Re 294    //2\n#define Mi 330    //3\n#define Fa 349    //4\n#define Sol 392   //5\n#define La 440    //6\n#define Si 494    //7\n#define Do_h 523  //1\n#define Re_h 587  //2\n#define Mi_h 659  //3\n#define Fa_h 698  //4\n#define Sol_h 784 //5\n#define La_h 880  //6\n#define Si_h 988  //7\n#define No 0\nint length;\nint16_t scale[] = {\n  La   , Do_h , Mi_h , Sol  , Sol  , Sol  , Re_h , Mi_h , Do_h , La   ,\n  La   , Do_h , Mi_h , Sol  , Sol  , Sol  , Re_h , Mi_h , Do_h , La   ,\n  La   , La   , Mi_h , Mi_h , Do_h , Re_h , Do_h , Re_h , Do_h , Mi_h , Mi_h , Do_h ,\n  Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , Mi_h , Fa_h , Mi_h ,\n  La   , La   , Mi_h , Mi_h , Do_h , Re_h , Do_h , Re_h , Do_h , Mi_h , Mi_h , Do_h ,\n  Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , La   , La   ,\n  La_h , La_h , La_h , Mi_h , Do_h , Re_h , Do_h , Re_h , Do_h , Mi_h , Mi_h , Do_h ,\n  Re_h , Do_h , Re_h , Do_h , Re_h , Re_h , Do_h , Re_h , Re_h , Mi_h , Sol_h, Mi_h ,\n  La   , La   , Mi_h , Mi_h , Do_h , Re_h , Do_h , Re_h , Do_h , Mi_h , Mi_h , Do_h ,\n  Re_h , Do_h , Re_h , Re_h , Do_h , Re_h , Re_h , Re_h , Do_h , Re_h , La   ,\n  La   , La_h , Mi_h , Re_h , Mi_h , Re_h , Do_h , Re_h , Do_h , Re_h , Sol_h, Mi_h ,\n  La   , Mi_h , Re_h , Do_h , Mi_h , Re_h , Do_h , Re_h , Mi_h , Re_h , Do_h , La   ,\n  La   , La_h , Mi_h , Re_h , Mi_h , Re_h , Do_h , Re_h , Do_h , Re_h , Sol_h, Mi_h ,\n  La   , Mi_h , Re_h , Do_h , Mi_h , Re_h , Do_h , Re_h , Mi_h , Re_h , Do_h , La   ,\n  No   , La   , Do_h , Re_h , Mi_h , Re_h , Mi_h , Mi_h , No   , La   , Do_h ,\n  Re_h , Mi_h , Re_h , Do_h , Do_h , No   , La   , Do_h , Re_h , Mi_h , Re_h , Mi_h , Mi_h , No   , La   , Do_h , Re_h , Mi_h , Re_h , Do_h , Do_h ,\n  La   , La   , Mi_h , Mi_h , Do_h , Re_h , Do_h , Re_h , Do_h , Mi_h , Mi_h , Do_h ,\n  Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , Mi_h , Fa_h , Mi_h ,\n  La   , La   , Mi_h , Mi_h , Do_h , Re_h , Do_h , Re_h , Do_h , Mi_h , Mi_h , Do_h ,\n  Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , La   ,\n  La_h , La_h , La_h , Mi_h , Do_h , Re_h , Do_h , Re_h , Do_h , Mi_h , Mi_h , Do_h ,\n  Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , Mi_h , Fa_h , Mi_h ,\n  La   , La   , Mi_h , Mi_h , Do_h , Re_h , Do_h , Re_h , Do_h , Mi_h , Mi_h , Do_h ,\n  Re_h , Do_h , Re_h , Re_h , Do_h , Re_h , Do_h , Re_h , Do_h , Re_h , La   ,\n  La   , La_h , Mi_h , Re_h , Mi_h , Re_h , Do_h , Re_h , Do_h , Re_h , Sol_h, Mi_h ,\n  La   , Mi_h , Re_h , Do_h , Mi_h , Re_h , Do_h , Re_h , Mi_h , Re_h , Do_h , La   ,\n  La   , La_h , Mi_h , Re_h , Mi_h , Re_h , Do_h , Re_h , Do_h , Re_h , Sol_h, Mi_h ,\n  La   , Mi_h , Re_h , Do_h , Mi_h , Re_h , Do_h , Re_h , Mi_h , Re_h , Do_h , La   ,\n  La   , Do_h , Mi_h , Sol  , Sol  , Sol  , Re_h , Mi_h , Do_h , La   ,\n  La   , Do_h , Mi_h , Sol  , Sol  , Sol  , Re_h , Mi_h , Do_h , La   ,\n  La   , La_h , Mi_h , Re_h , Mi_h , Re_h , Do_h , Re_h , Do_h , Re_h , Sol_h, Mi_h ,\n  La   , Mi_h , Re_h , Do_h , Mi_h , Re_h , Do_h , Re_h , Mi_h , Re_h , Do_h , La   ,\n  La   , La_h , Mi_h , Re_h , Mi_h , Re_h , Do_h , Re_h , Do_h , Re_h , Sol_h, Mi_h ,\n  La   , Mi_h , Re_h , Do_h , Mi_h , Re_h , Do_h , Re_h , Mi_h , Re_h , Do_h , La   ,\n  La   , Do_h , Mi_h , Sol  , Sol  , Sol  , Re_h , Mi_h , Do_h , La   ,\n  La   , Do_h , Mi_h , Sol  , Sol  , Sol  , Re_h , Mi_h , Do_h , La\n};\nint8_t durt[] =\n{\n  2, 2, 2, 2, 8, 2, 2, 2, 2, 8,\n  2, 2, 2, 2, 8, 2, 2, 2, 2, 8,\n  2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4,\n  2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4,\n  2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1,\n  1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2,\n  2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1,\n  1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 8, 2, 2, 2, 2, 8, 4, 4, 8,\n  2, 2, 2, 2, 8, 4, 4, 8, 2, 2, 2, 2, 8, 4, 4, 8, 2, 2, 2, 2, 8,\n  2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4,\n  2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4,\n  2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4,\n  2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1,\n  1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  2, 2, 2, 2, 8, 2, 2, 2, 2, 8,\n  2, 2, 2, 2, 8, 2, 2, 2, 2, 8,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 4,\n  4, 4, 2, 2, 4, 2, 2, 2, 2, 2, 2, 1,\n  2, 2, 2, 2, 8, 2, 2, 2, 2, 8,\n  2, 2, 2, 2, 8, 2, 2, 2, 2, 8\n};\nint tonepin = A0;\nvoid setup()\n{\n  pinMode(tonepin, OUTPUT);\n  pinMode(A2, OUTPUT);\n  digitalWrite(A2, LOW);\n  pinMode(A3, OUTPUT);\n  digitalWrite(A3, LOW);\n  pinMode(A4, OUTPUT);\n  digitalWrite(A4, LOW);\n  pinMode(A5, OUTPUT);\n  digitalWrite(A5, LOW);\n  for (int i = 1; i <= 13; i++) {\n    pinMode(i, OUTPUT);\n    digitalWrite(i, LOW);\n  }\n  length = sizeof(scale) / sizeof(scale[0]);\n}\nvoid loop()\n{\n  for (int x = 0; x < length; x++)\n  {\n    if (scale[x] == 0) {\n      noTone(tonepin);\n    }\n    else {\n      tone(tonepin, scale[x]);\n    }\n    //digitalWrite(ledpin,HIGH);\n    for (int i = 1; i <= 13; i++) {\n      if (i % 4 == 1) {\n        digitalWrite(i, HIGH);\n      }\n    }\n    digitalWrite(A3, LOW);\n    digitalWrite(A5, HIGH);\n    for (int i = 1; i <= 13; i++) {\n      if (i % 4 == 3) {\n        digitalWrite(i, LOW);\n      }\n    }\n    delay(660 * durt[x] / 4);\n    //digitalWrite(ledpin,LOW);\n    for (int i = 1; i <= 13; i++) {\n      if (i % 4 == 1) {\n        digitalWrite(i, LOW);\n      }\n    }\n    digitalWrite(A5, LOW);\n    digitalWrite(A3, HIGH);\n    for (int i = 1; i <= 13; i++) {\n      if (i % 4 == 3) {\n        digitalWrite(i, HIGH);\n      }\n    }\n    delay(150 * durt[x] / 4);\n    noTone(tonepin);\n  }\n  delay(3000);\n}\n```\n\n其他音乐同理，不做解释，建议自行搜索学习音乐基础知识。\n\n# 最后一步，测试\n\n这是最重要的一步，我测试了很长时间才能保证我的开发板可以和原音乐拍子对上，测试主要测两个，一是拍速，而是音符是否正确","tags":["Arduino"]},{"title":"Python实现微信接龙转换为表格","url":"/blog/2020/02/19/Python实现微信接龙转换为表格/","content":"\n近期在家中上网课，因为形式特殊，班群里经常通过接龙统计些信息，比如说错题、住址（用来寄学习资料）等等，有的统计成接龙还好说，但有的要改成表格，所以老师是接龙文字还是接龙表格呢？？？？\n\n接龙文字：微信接龙辅助，不会漏人，很不错，但改成表格麻烦\n\n接龙表格：这个直接，但经常漏人啊。。。\n\n于是开发了一个项目，名为 Solitaire，用于格式化文字接龙内容为表格\n\n基于pyforms的GUI框架\n\npyforms是基于pyqt的GUI框架，有点臃肿。。。\n\n不建议打包，我打包了一下，环境 windows2016，工具pyinstaller\n\n打包完大小160mb左右。。。。。\n\n它估计把整个pyqt都放进去了\n\n## 使用方法\n\n先安装依赖（我认为你已安装Python）\n\n``` s\npip install xlwt\npip install pyforms\n```\n\n然后下面是代码：\n\n``` Python\nimport pyforms\nfrom   pyforms.basewidget import BaseWidget\nfrom   pyforms.controls   import ControlText\nfrom   pyforms.controls   import ControlLabel\nfrom   pyforms.controls   import ControlTextArea\nfrom   pyforms.controls   import ControlButton\nimport xlwt\nclass SimpleExample1(BaseWidget):\n    def __init__(self):\n        super(SimpleExample1,self).__init__('接龙格式化工具-----Lakphy')\n        self._fullname      = ControlTextArea('接龙内容')\n        self._test          = ControlLabel('请输入接龙内容后点击格式化，即可转换为表格\\n请注意使用\\'--\\'即两个减号为每个数据分隔符，使用换行作为每个人的数据分隔符！\\nCopyRight Lakphy 2020\\n网站:lakphy.me')\n        self._button        = ControlButton('格式化')\n        self._button.value  = self.__buttonAction\n    def __buttonAction(self):\n        self._test.value = str(self._fullname.value.split('\\n'))\n        a      = self._fullname.value.split('\\n')\n        wk     = xlwt.Workbook()\n        sheet1 = wk.add_sheet(\"数据\", cell_overwrite_ok=True)\n        for i in range(0,len(a)):\n            b  = a[i].split('--')\n            for j in range(0,len(b)):\n                if j == 0:\n                    d = b[j].split('. ',2)\n                    if len(d) == 2:\n                        c = d[1]\n                    else:\n                        d = b[j].split('.',2)\n                        if len(d) == 2:\n                            c = d[1]\n                        else:\n                            c = b[j]\n                else:\n                    c = b[j]\n                sheet1.write(i+1,j+1,c)\n            sheet1.write(i+1,0,i+1)\n        wk.save('Solitaire.xls')\n        self._test.value = '接龙内容格式化成功！内容保存在Solitaire.xls，请及时备份该文件，防止下次使用该软件时覆盖内容！\\nCopyRight Lakphy 2020\\n网站:lakphy.me'\nif __name__ == \"__main__\": pyforms.start_app( SimpleExample1 )\n```\n\n附文：[pyforms文档](<https://pyforms.readthedocs.io/projects/Pyforms-GUI/en/v4/getting-started/the-basic.html>)","tags":["Python"]},{"title":"SourLib","url":"/blog/2020/02/18/SourLib/","content":"\n打开网站-->搜索资源-->获取资源\n找资源，从未像这样自然过\n\n[SourLib](https://lakphy.github.io/res) / [国内线路](https://lakphy.gitee.io/res)\n\n![](1-1Q0112004410-L.jpg)\n\n\n\n想看某个电影，或是，某部电视剧\n但始终找不到资源？\n在这里，资源触手可得\n![](th1.jpg)\n\n\n\n仅仅是资源？No\n海量在线小工具，等你来发现\n用不完的工具，让您的工作学习生活事半功倍\n![](th.jpg)\n\n\n\n基于优秀的MDUI前端技术，与这取之不尽的资源浑然天成\n只有像Material Design这样优秀的设计规范才能与这优秀的资源相匹配\n![](pic2-mob-1107.png)\n\n\n\n基于CSS3采用先进的响应式布局，不管是在手机，还是平板，还是电脑，甚至是，电视？我们都能自如地适应您的屏幕，让您享受最棒的观感和最高的效率！\n![](e3d90e31589b4c1aa7641d16ef0be890_th.jpg)\n\n\n\n我们优秀的前端工程师为您打磨了最优秀站内搜索引擎算法，使您在这浩如烟海的资源中，总能最快找到您需要的资源\n\n[SourLib](https://lakphy.github.io/res) / [国内线路](https://lakphy.gitee.io/res)\n\n\n\n我们仍需努力，您如何有任何想要加入的资源，请联系我们\n\n","tags":["资源库"]},{"title":"deepin长期使用评测","url":"/blog/2020/02/15/deepin长期使用评测/","content":"\n由于一些不可抗拒的原因（主板莫名不兼容win）不得不选择Linux，试过多种Linux，deepin(深度操作系统)可以说是众多linux最省心好用的了。\n\n[深度操作系统官网](https://deepin.org)\n\n[深度官网](https://deepin.com/)\n\n# 如何发现这么好的系统的\n\n### 首先支持国产\n\n这个当然的，国产的好东西必须大力支持！\n\n### 国际排名高\n\n这个不多说，大众的眼睛是雪亮的，看下排名就知道啦：\n\n[排名链接](https://distrowatch.com/dwres.php?resource=popularity)\n\n![](1.png)\n\n可以看到的deepin基本稳定在第十名，注意现在时间2020年02月15日。\n\n最近疫情原因很长时间没有维护了，排名有所下降属于正常现象。\n\n记得最高排第六。\n\n### 软件生态\n\n其实我是冲软件生态来的\n\n软件生态是一个操作系统的灵魂，没有软件生态，它就不配叫操作系统，那叫啥？可能叫嵌入式系统？功能机？（Lumia警告）\n\nMicrosoft，Google，Apple都为他们操作系统生态投入了大量资金和人员，包括学生组织开发活动，软件竞赛之类的活动，或是直接给钱，足以突显软件生态的重要性。\n\n众所周知，Windows系统的整体操作逻辑已经十几年没变了，而且易用性越来越差，在众多现代操作系统中处于劣势，但为什么Windows用户永远不会降低呢，这也是软件生态的效果，Windows下的软件生态非常庞大，难以超越，这也表现了当初微软在中国地区容忍盗版泛滥现象的战略意义。\n\n好了好了，有点偏题了。\n\n下面说deepin的软件生态：\n\n1. Deepin基于Debian GNU/Linux，支持Linux软件，Debian特有的deb软件，以及Debian著名的apt包管理系统\n2. 预装wine，通过底层代码适配大量Windows软件\n3. 深度团队对于不支持wine的Windows软件进行专门适配，这个是其他发行版装了wine也比不上了的。像Windows QQ就是专门适配的，比QQ官方发布的Linux版好用\n4. 预装Chrome，支持webAPP，ChromeOS软件，安卓软件\n\n可见这软件生态真的是太强了\n\n这是GNU/Linux里生态强的，据说还有个国产的ChromeOS生态也贼强（国产都喜欢玩全平台适配？），没用过，叫fydeOS，可以去尝试一下。\n\n这个生态空口无凭，看下例子\n\n![](2.png)\n\n上面这个是应用商店，很多是深度团队自己适配来的，很良心了。\n\n![](3.png)\n\n上面这个是QQ官方的Linux版，可以看出来界面相当远古了，而且看那大小也不像好东西\n\n![](4.png)\n\n这个是wine版QQ，深度团队专门适配过的，版本也比较新，但最近好像是疫情原因还没给适配下一版本。\n\n![](5.png)\n\n上面这是应用商店里编程开发专区，可以看到这里特殊适配的就少了，毕竟开发用的软件还是给做Linux版的\n\n这里说个有意思的，深度团队还把著名游戏平台steam整来了，如下图：\n\n![](6.png)\n\n这就很厉害了，据说还能玩GTA呢\n\n下面这个是下载排行榜：（偷偷说个事：Linux版百度云不限速！）\n\n![](7.png)\n\n# 使用体验\n\n整体使用体验不错，高斯模糊运用得当\n\n### 桌面\n\n##### 桌面总览![](8.png)\n\n请无视我桌面的文件谢谢（\n\n##### dock栏\n\ndock可以设置成MacOS样式或Windows样式，非常友好\n\n![](9.png)\n\n上面这是仿win，即高效样式\n\n![](10.png)\n\n上面这个是仿MacOS样式，即潮流样式\n\n我使用的是高效样式，之后将使用高效样式演示，潮流样式类似\n\n##### 硬盘管理器\n\n![11](11.png)\n\n##### WiFi\n\n![](12.png)\n\n##### 应用列表\n\n![](13.png)\n\n这个也有两种风格，这个是仿win的，下面这个是仿MacOS的\n\n![](14.png)\n\n##### 工作区总览\n\n![](15.png)\n\n### 设置界面\n\n这里是通知界面，点右上角切换设置\n\n![](16.png)\n\n设置总览：\n\n![17](17.png)\n\n下面把整个设置截屏看看\n\n![18](18.png)\n\n\n\n![19](19.png)\n\n![20](20.png)\n\n![21](21.png)\n\n![22](22.png)\n\n![23](23.png)\n\n值得一提的是，deepin自带一个开机引导选项，非常方便\n\n![25](25.png)\n\n### 终端\n\n这终端和普通GNU/Linux终端一样，没有区别\n\n![26](26.png)\n\n### 文件管理器\n\n![27](27.png)\n\n### Chrome\n\n![28](28.png)\n\n### 电源选项\n\n![29](29.png)\n\n### 资源管理器\n\n![30](30.png)\n\n# 其他软件\n\n这里推荐几个有用的软件\n\n### 连接手机\n\n我用kdeconnect连接手机，堪比airdrop，十分好用\n\n![32](32.png)\n\n![31](31.png)\n\n### 那些你懂的飞机\n\n这个我用clash，github上有，配置有点复杂，但好用\n\n### 打代码\n\n##### VSCode\n\n![33](33.png)\n\n##### sublime text\n\n![34](34.png)\n\n# 结尾\n\n以上是我简单对deepin的评测，十分好用，目前我已使用一年多了，没什么大问题（除了上次我不小心输错命令把软件全删了），希望这个国产操作系统可以越做越好。\n","tags":["评测"]},{"title":"linux如何快速备份","url":"/blog/2020/02/13/linux如何快速备份/","content":"\n我现在使用的是deepin linux，自带备份功能，但总感觉这个备份有点。。。。\n\n> Talk is cheap,show me the screenshot。\n\n直接看图吧，备注现在时间2020-02-13（\n\n![看这时间多悠久](2.png)\n\n好像从第一次注册完账号开启自动备份后就没开过。。。\n\n我这还算好的，最起码有个界面，那些用其他发行版的大牛们怎么办啊，全盘备份？没这必要吧，只要备份重要配置文件就够了，再说全盘备份要是碰上Linus那种只用固态硬盘的硬盘就遭殃了。\n\n突然想起来Linux有批处理功能，于是打开vim和Google，开工！\n\n# 编写程序\n\n## 基本思路\n\n这里说一下备份思路\n\n1. 把重要文件（夹）复制到临时目录（因为是机械硬盘无所谓寿命）\n2. 打包成zip\n3. 移动到u盘里\n\n## 第一个功能：计时\n\n这功能真的是强迫症福音啊，废话少说放码：\n\n```\nstart=$(date \"+%s\")\t#记录开始时间\n#这里运行代码\nnow=$(date \"+%s\")\t#记录结束时间\ntime=$((now-start))\t#计算用时\necho \"time used:$time seconds\"\t#输出时间\n#echo $date\n```\n\n就这样一个计时功能出来了，果然比某某些编程语言简单，像某语言还要引用time（逃\n\n对了，科普一下，shell里输出是\n\n```\necho \"exampleString\"\t#输出文字\necho $someVar\t#输出变量\n```\n\n我测试了一下，没有代码时候输出0s，还是挺准的  :D\n\n## 建立备份临时文件夹\n\n此步在硬盘中建立临时备份文件夹，命名为当前时间\n\n建立文件夹应该都会吧，所以直接上代码\n\n```\ndate=$(date +%Y%m%d%H%m%s)\t#获取时间\nmkdir /media/lakphy/DATA/baks/$date\t#建立文件夹\n```\n\n## 建立重要文件夹名单\n\n此步建立一个数组（我习惯将列表说成数组，意义相同，以后不做解释），里面放有重要文件（夹）通报（划掉）名单\n\n```\ncopyPath=(\t#这是建立数组的代码\n\t'/home/lakphy/lakphy/golang'\n\t'/home/lakphy/lakphy/py'\n\t'/home/lakphy/lakphy/nodejs'\n\t'/home/lakphy/Downloads'\n\t'/media/lakphy/DATA/downloads'\n\t'/home/lakphy/Desktop'\n\t)\t#这是我的重要文件目录，仅示例使用\n```\n\n## 复制内容到临时备份文件夹\n\n这里利用循环遍历重要文件（夹）名单复制，这个操作我们在学习Python时候应该都学过\n\n```\nfor p in ${copyPath[@]}\t#for循环\ndo\t#循环开始符\n\techo 'copying '$p\t#输出复制信息\n\tcp -r $p /media/lakphy/DATA/baks/$date\t#Linux cp命令玄学复制，速度贼快\ndone\t#循环结束符\n```\n\n## 压缩\n\n```\npathname='/media/lakphy/DATA/baks/'$date\t#备份文件夹路径  date是我们之前定义的时间\nzipname='/media/lakphy/DATA/baks/'$date\t\t#压缩文件路径和名字\nzip -r $zipname $pathname\t\t\t\t\t#压缩命令\n```\n\n## 移动到批处理程序所在目录\n\nmv命令，这个比较简单，不解释\n\n# 完整代码\n\n来看下完整代码\n\n## codes\n\n```\n\n```\n\n\n\n## 运行\n\n保存为backup.sh\n\n如果程序在电脑上的话，直接双击或者命令:\n\n```\n./backup.sh\n```\n\n如果在外部存储器上，只能在命令行运行，命令只能是：\n\n```\nbash backup.sh\n```\n\nbash意思是解释器为bash，至于为什么是bash不是shell，这个我也不懂，我谷歌的时候写的shell啊。。。但shell真的运行不了，不信试试：\n\n```\nshell backup.sh\n```\n\n至于内部外部存储器区别，我觉得可能是外部存储器文件系统不是ext4不能加可执行权限问题\n\n我运行了一下，速度不错，比直接复制快，毕竟cp命令玄学复制，430s完成。","tags":["bash"]},{"title":"异步的哲学---旧电脑也能运用自如？","url":"/blog/2020/02/12/异步的哲学-旧电脑也能运用自如？/","content":"\n先说一句，这篇博文是瞎讨论哲学用的（\n\n# 什么是异步\n\n### 来自Wikipedia的解释（异步IO）\n\n[[原文链接](<https://zh.wikipedia.org/wiki/%E5%BC%82%E6%AD%A5IO>)]\n\n**异步IO**是计算机操作系统对[输入输出](https://zh.wikipedia.org/wiki/%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA)的一种处理方式：发起IO请求的线程不等IO操作完成，就继续执行随后的代码，IO结果用其他方式通知发起IO请求的程序。与异步IO相对的是更为常见的“同步（阻塞）IO”：发起IO请求的线程不从正在调用的IO操作函数返回（即被阻塞），直至IO操作完成。\n\n#### 类Unix操作系统与POSIX[[编辑](https://zh.wikipedia.org/w/index.php?title=%E5%BC%82%E6%AD%A5IO&action=edit&section=1)]\n\nPOSIX提供下述API函数：\n\n|      | 阻塞        | 非阻塞                      |\n| ---- | ----------- | --------------------------- |\n| 同步 | write, read | write, read + poll / select |\n| 异步 | -           | aio_write, aio_read         |\n\n#### Windows操作系统的异步IO[[编辑](https://zh.wikipedia.org/w/index.php?title=%E5%BC%82%E6%AD%A5IO&action=edit&section=2)]\n\nWindows提供多种异步IO（也称[重叠IO](https://zh.wikipedia.org/wiki/%E9%87%8D%E5%8F%A0I/O)）方式：[[1\\]](https://zh.wikipedia.org/wiki/%E5%BC%82%E6%AD%A5IO#cite_note-1)\n\n##### 设备内核对象[[编辑](https://zh.wikipedia.org/w/index.php?title=%E5%BC%82%E6%AD%A5IO&action=edit&section=3)]\n\nIO设备在操作系统内核中表示为[内核对象](https://zh.wikipedia.org/wiki/%E5%86%85%E6%A0%B8%E5%AF%B9%E8%B1%A1)，因此具有可等待（waitable）内核对象状态。例如：文件[句柄](https://zh.wikipedia.org/wiki/%E5%8F%A5%E6%9F%84)，线程句柄等等。对于文件内核对象，当一个异步IO完成后，该文件句柄被置为触发态。使用这种方式获取异步IO完成的通知，缺点是如果在一个文件内核对象上同时有多个异步IO操作，只通过文件句柄的触发无法辨识哪个异步IO操作完成了。\n\n例子：\n\n```\nHANDLE hFile = CreateFileW(L\"d:\\\\a.txt\", GENERIC_WRITE, 0, 0, CREATE_ALWAYS, FILE_FLAG_OVERLAPPED, 0); //设置异步IO的标志FILE_FLAG_OVERLAPPED\nchar buffer[10] = {\"abcd\"};\nOVERLAPPED ol = { 0 };//用0初始化OVERLAPPED的结构\nol.Offset = 2;/从文件的第三个字节开始IO\nBOOL rt = WriteFile(hFile, buffer, 5, NULL, &ol);//发起一个异步写操作\n//SetFileCompletionNotificationModes(hFile, FILE_SKIP_SET_EVENT_ON_HANDLE);//如此设置则文件内核对象就不会被触发\nif (rt == FALSE && GetLastError() == ERROR_IO_PENDING)//检查异步IO是否完成 \n{\n\tWaitForSingleObject(hFile, INFINITE);//等待设备内核对象（文件）被触发。\n}\nCloseHandle(hFile);\n```\n\n##### GetOverlappedResult函数[[编辑](https://zh.wikipedia.org/w/index.php?title=%E5%BC%82%E6%AD%A5IO&action=edit&section=4)]\n\n也可以使用[Windows API](https://zh.wikipedia.org/wiki/Windows_API)函数GetOverlappedResult直接阻塞/非阻塞等待指定的异步IO操作是否完成。[[2\\]](https://zh.wikipedia.org/wiki/%E5%BC%82%E6%AD%A5IO#cite_note-2)该函数检查OVERLAPPED结构中的Internal成员的值是否为STATUS_PENDING来判断异步IO是否完成。\n\n##### 异步IO操作的完成通知用[事件](https://zh.wikipedia.org/wiki/%E4%BA%8B%E4%BB%B6_(%E5%90%8C%E6%AD%A5%E5%8E%9F%E8%AF%AD))内核对象[[编辑](https://zh.wikipedia.org/w/index.php?title=%E5%BC%82%E6%AD%A5IO&action=edit&section=5)]\n\n在异步IO操作的read/write函数调用中给出的OVERLAPPED类型的参数中，可以指定一个内核[事件](https://zh.wikipedia.org/wiki/%E4%BA%8B%E4%BB%B6_(%E5%90%8C%E6%AD%A5%E5%8E%9F%E8%AF%AD))对象。这个异步IO操作完成时，这个内核[事件](https://zh.wikipedia.org/wiki/%E4%BA%8B%E4%BB%B6_(%E5%90%8C%E6%AD%A5%E5%8E%9F%E8%AF%AD))对象会被触发。从而，等待在这个事件对象上的程序就会知道这个异步IO操作完成。\n\n例子：\n\n```\nHANDLE hFile = CreateFileW(L\"d:\\\\a.txt\", GENERIC_WRITE, 0, 0, CREATE_ALWAYS, FILE_FLAG_OVERLAPPED, 0); //设置异步IO的标志FILE_FLAG_OVERLAPPED\nchar buffer[10] = {\"abcd\"};\nOVERLAPPED ol = { 0 };//用0初始化OVERLAPPED的结构\nol.Offset = 2;/从文件的第三个字节开始IO\nHANDLE hEvent = CreateEvent(0, FALSE, FALSE, NULL);  \nol.hEvent = hEvent;//传递一个事件对象。  \n\nBOOL rt = WriteFile(hFile, buffer, 5, NULL, &ol);//发起一个异步写操作 \n\nif (rt == FALSE && GetLastError() == ERROR_IO_PENDING)//检查异步IO是否完成 \n{\n\tWaitForSingleObject(ol.hEvent, INFINITE);//等待设备内核对象（文件）被触发。\n}\nCloseHandle(hEvent); \nCloseHandle(hFile);\n```\n\n##### [可唤醒I/O](https://zh.wikipedia.org/wiki/%E5%8F%AF%E5%94%A4%E9%86%92I/O)[[编辑](https://zh.wikipedia.org/w/index.php?title=%E5%BC%82%E6%AD%A5IO&action=edit&section=6)]\n\n异步[可唤醒I/O](https://zh.wikipedia.org/wiki/%E5%8F%AF%E5%94%A4%E9%86%92I/O)操作通过ReadFileEx/WriteFileEx函数指出完成过程回调函数。回调函数在该线程的可唤醒等待（alertable wait）中被执行。\n\n##### [完成端口](https://zh.wikipedia.org/wiki/%E5%AE%8C%E6%88%90%E7%AB%AF%E5%8F%A3)[[编辑](https://zh.wikipedia.org/w/index.php?title=%E5%BC%82%E6%AD%A5IO&action=edit&section=7)]\n\n使用CreateIoCompletionPort函数创建一个[完成端口](https://zh.wikipedia.org/wiki/%E5%AE%8C%E6%88%90%E7%AB%AF%E5%8F%A3)。然后把文件句柄绑定到这个完成端口（通过CreateIoCompletionPort函数)。这个文件句柄上的异步IO操作完成时，会自动向这个完成完成端口发通知。线程通过GetQueuedCompletionStatus函数等待这个完成端口上的完成通知，然后从GetQueuedCompletionStatus的调用返回处恢复线程执行。\n\n##### [线程池](https://zh.wikipedia.org/wiki/%E7%BA%BF%E7%A8%8B%E6%B1%A0)I/O完成对象[[编辑](https://zh.wikipedia.org/w/index.php?title=%E5%BC%82%E6%AD%A5IO&action=edit&section=8)]\n\n使用CreateThreadpoolIo函数创建一个I/O完成对象，绑定了要执行异步I/O操作的文件句柄与待执行的回调函数。通过StartThreadpoolIo函数开始I/O完成对象的工作。每当绑定的文件句柄上的异步I/O操作完成，自动调用[线程池](https://zh.wikipedia.org/wiki/%E7%BA%BF%E7%A8%8B%E6%B1%A0)上的线程执行指定的回调函数。\n\n例子：\n\n```\nVOID CALLBACK OverlappedCompletionRoutine(PTP_CALLBACK_INSTANCE pInstance,  \n                                          PVOID pvContext,  \n                                          PVOID pOverlapped,  \n                                          ULONG IoResult,  \n                                          ULONG_PTR NumberOfBytesTransferred,  \n                                          PTP_IO pIo)  \n{  \n    printf(\"OverlappedCompletionRoutine, transferred: %d bytes\\n\", NumberOfBytesTransferred);  \n}  \n\nHANDLE hFile = CreateFileW(L\"d:\\\\a.txt\", GENERIC_WRITE, 0, 0, CREATE_ALWAYS, FILE_FLAG_OVERLAPPED, 0); //设置异步IO的标志FILE_FLAG_OVERLAPPED\n\nPTP_IO pio = CreateThreadpoolIo(hFile, OverlappedCompletionRoutine, NULL, NULL);//将设备对象和线程池的IO完成端口关联起来。  \nStartThreadpoolIo(pio);\nchar buffer[10] = {\"abcd\"};\nOVERLAPPED ol = { 0 };//用0初始化OVERLAPPED的结构\nol.Offset = 2;/从文件的第三个字节开始IO   \n\nBOOL rt = WriteFile(hFile, buffer, 5, NULL, &ol);//发起一个异步写操作 \nif(rt==FALSE && GetLastError()==ERROR_IO_PENDING))\n{  \n   ::Sleep(4000); \n   //do somethings... \n}\nelse\n{\n   CancelThreadpoolIo(pio); \n}\nWaitForThreadpoolIoCallbacks(pio,false);\nCloseHandle(hFile); \nCloseThreadpoolIo(pio);//关闭线程池io完成对象\n```\n\n#### 参见[[编辑](https://zh.wikipedia.org/w/index.php?title=%E5%BC%82%E6%AD%A5IO&action=edit&section=9)]\n\n- [IOCP](https://zh.wikipedia.org/wiki/IOCP)\n\n#### 参考文献[[编辑](https://zh.wikipedia.org/w/index.php?title=%E5%BC%82%E6%AD%A5IO&action=edit&section=10)]\n\n1. **^** [Description from .NET Framework Developer's Guide](http://msdn.microsoft.com/en-US/library/kztecsys%28v=vs.100%29.aspx)\n2. **^** [MSDN:GetOverlappedResult function](https://msdn.microsoft.com/en-us/library/windows/desktop/ms683209(v=vs.85).aspx)\n\n#### 外部链接[[编辑](https://zh.wikipedia.org/w/index.php?title=%E5%BC%82%E6%AD%A5IO&action=edit&section=11)]\n\n- [The C10K Problem](https://www.webcitation.org/6ICibHuyd?url=http://www.kegel.com/c10k.html); a survey of asynchronous I/O methods with emphasis on scaling – by Dan Kegel\n- Article \"[Boost application performance using asynchronous I/O](http://www.ibm.com/developerworks/library/l-async)\" by [M. Tim Jones](https://zh.wikipedia.org/w/index.php?title=M._Tim_Jones&action=edit&redlink=1)\n- Article \"[Lazy Asynchronous I/O For Event-Driven Servers](http://www.usenix.org/event/usenix04/tech/general/full_papers/elmeleegy/elmeleegy_html/html.html)\" by [Willy Zwaenepoel](https://zh.wikipedia.org/w/index.php?title=Willy_Zwaenepoel&action=edit&redlink=1), [Khaled Elmeleegy](https://zh.wikipedia.org/w/index.php?title=Khaled_Elmeleegy&action=edit&redlink=1), [Anupam Chanda](https://zh.wikipedia.org/w/index.php?title=Anupam_Chanda&action=edit&redlink=1) and [Alan L. Cox](https://zh.wikipedia.org/w/index.php?title=Alan_L._Cox&action=edit&redlink=1)\n- [Perform I/O Operations in Parallel](https://www.gnu.org/software/libc/manual/html_node/Asynchronous-I_002fO.html)\n- [Description from POSIX standard](http://opengroup.org/onlinepubs/009695399/basedefs/aio.h.html)\n- [Inside I/O Completion Ports](https://web.archive.org/web/20101101112358/http://doc.sch130.nsc.ru/www.sysinternals.com/ntw2k/info/comport.shtml) by [Mark Russinovich](https://zh.wikipedia.org/w/index.php?title=Mark_Russinovich&action=edit&redlink=1)\n- [Asynchronous I/O and The Asynchronous Disk I/O Explorer](http://www.flounder.com/asynchexplorer.htm)\n- [IO::AIO is a Perl module offering an asynchronous interface for most I/O operations](http://software.schmorp.de/pkg/IO-AIO.html)\n- [ACE Proactor](https://web.archive.org/web/20170623060116/http://www.cs.wustl.edu/~schmidt/PDF/proactor.pdf)\n\n### 解释\n\n从上面文献可以看出，异步IO大概就是发起IO的程序一直发起IO，不需要等待IO做出相应。\n\n# 有什么用\n\n### 从爬虫说起\n\n异步IO是我学习Python爬虫时候接触到的，所以先从爬虫说起。\n随着计算机性能的不断提升，程序运行速度不断提高，而限制程序运行速度的不再是计算机性能，而是IO速度，比如一个爬虫处理数据要20ms，而网络延迟60ms（这也是比较理想的速度了），这段时间Python闲的没事干，只能等待IO响应，计算机的性能没法发挥到极致。而异步IO只需程序一直发起IO，等响应来了再处理响应，大大提升了爬虫速度\n\n### 作用\n\n促进了爬虫事业发展，发挥了计算机应有性能\n\n# 什么哲学\n\n### 老电脑/手机卡顿表现在哪里\n\n大多数老旧设备卡顿是性能不够，CPU无法处理大量程序造成的\n\n### 怎么解决\n\n解决方法就是让老旧设备的性能发挥到极致，发挥到极致的方法除了超频以外还有一个妙法，这就是我要说的内容，这个方法就是充分利用老旧设备的IO等待时间，让老旧设备一直保持高频运转\n\n### 怎么操作\n\n这要说你是怎么判断你的设备卡顿了，你判断的依据一定是看到设备IO的output反应迟缓，但你没看到的是input正闲的没事干，此时你可以用脑子预测你将会需要按什么键，或者什么输入操作，给设备input，此时设备卡顿，所以你的input处于已接收未处理状态，因为CPU累的要死所以暂时不会处理input。而等待CPU处理完卡顿后刚准备歇会，就发现了你的input，于是就开始处理input，发挥到CPU的性能极致。\n这个实际上并不是CPU的异步，而是你脑子的异步，因为设备卡顿你并没有接收到设备给你的output，但你不等待output，直接进行下一个input，省去设备output然后你脑子处理再input给设备的时间，大大提升设备运行效率。\n\n# 最后\n\n提升老旧设备效率只是一个简单的异步哲学应用，生活中有很多异步哲学的应用，只要你能“运用自如”，工作效率提升的不是一点半点。\n\n","tags":["哲学"]},{"title":"优酸乳味的资源库","url":"/blog/2020/02/11/优酸乳味的资源库/","content":"\n经过lakphy的不懈努力，这个项目终于达到可以公开的程度了\n/一个人既是前端工程师又是录入员，既是UI设计师又是交互设计师，既是debugger又是文案，真的好南啊\n下面是海报\n![海报](post.jpg)\n\n## 这是什么\n\n这是一个资源站，上面的资源应有尽有，大多数都是免费的，电子书、电影、会员音乐、会员电视剧、在线工具、免费API、开源镜像站列表、热门排行榜、kindle电子书.......只要你能想到的，这上面都可以找到。\n\n## 为什么要做这样一个网站\n\n发现现在国内找资源很麻烦，上谷歌自然能找到，但并不是一直都能上啊，百度啥也没有，必应半吊子，聚合在一起多方便啊。所以我很久以前就着手做这个网站了，只是一开始是自己用，比较简陋，没打算给大家用。\n后来觉得这么好的资源网站，应该和大家一起分享，但太简陋拿不出手啊，于是就再次开工，完善网站，这也不简单，涉及适配性，版权声明等等方面。\n\n## 为什么叫优酸乳味的资源库？\n\n这也比较有意思了，起初网站是自用，名字随便起的，叫resource library，就是资源库的意思，但太长了，在小屏手机问题明显，影响美观，于是缩了缩。刚好有个关系特别好的朋友网名：优酸乳味的**。于是名字就缩成了SourLib，中文名优酸乳味的资源库，也是一个有故事的名字。\n\n## 链接？\n\n链接是[lakphy.me/res](https://lakphy.github.io/res)\n国内如果访问慢，就点[这里](https://lakphy.gitee.io/res)\n国内这个更新慢，因为有些网站没录完，所以建议点第一个链接，更新快。\n\n为什么链接目录是res？\n因为之前名字是resource library，所以目录res，也就没改\n\n## 规则提交\n\n优酸乳味的资源库长期接受资源提交，只需发送到我的邮箱即可：\nlakphy@outlook.com\n有任何版权问题或者网站不运转问题也可以联系我","tags":["资源库"]},{"title":"技术杂谈---几个月没更博客发生了什么","url":"/blog/2020/02/11/技术杂谈-几个月没更博客发生了什么/","content":"好长时间没有更新博客了，在这期间发生了什么？(´°̥̥̥̥̥̥̥̥ω°̥̥̥̥̥̥̥̥｀)\n## Why？没更新博客\n#### 因为高三了\n这是最重要的原因了，实在抽不出时间来写博客，（再说也没人看是吧(╥﹏╥)）\n#### 还有个悲伤的原因\n那就是我的电脑挂了，而我的博客只在我的电脑里有备份\n至于挂掉原因。。。。。\n\n一个悲惨的原因，我在安装Python的时候发现我的Python2和Python3的pip混了，没法使用，于是我就打算重装Python\n重装这东西emmm，Google一下吧，Google出来一个卸载软件及其依赖的包，我还想的卸载依赖的包是不是就是指的pip啊\n```\nsudo apt-get autoremove python\n```\n对，就是上面这个万恶的命令\n我输完命令，回车输root密码，回车，一气呵成，头也没抬，然后拿起了手机\n\n过了大概十分钟，感觉不对劲，卸个软件咋这么长时间啊\n抬头一看，这tm卸啥呢啊，咋一堆deepin-什么什么的包也卸了啊，在仔细看，底下咋把QQ卸了啊\n非常不对劲\n我赶紧一个Ctrl+Z，停止卸载，可惜为时已晚，大多数系统组件已经废掉了\n我一想，wc，卸载依赖，好像挺多软件依赖Python的啊呜呜呜\n赶紧想办法补救吧\n亏了dde桌面环境还在\n赶紧apt一下看看能不能装回来，发现我刚才有个Ctrl+Z把apt锁住了\n心里跑过一群草泥马\n赶紧去清华镜像站重装apt\nwoc，啥玩意，网卡驱动没了\n我tmd。。。。。\n没办法，备份，关机，第二天去学校做deepin启动盘吧\n亏了我备份时候记得把hexo配置备份了，不然估计等高考完才能更新博客\n###### 说个好玩的：移花接木大法\n我重装hexo时候，出现莫名错误，导致node_modules目录下的内容缺失，没法正常部署\n我灵机一动\n备份里不是有一份么，直接复制到行了\n于是一顿操作\n随着一个命令\n```\nhexo server\n```\n我竟然成功了，我真佩服我的脑子\n## 以后呢？\n以后吧，我会缓慢更新一些博客，一些奇奇怪怪的博客，当然不会是什么踩坑博客了，毕竟没有时间，当然也不是那么绝对啊。\n我会把一些想法写下来，我认为相当不错的想法，可以留到高考完实现\n## 最近关注了哪些方面\n#### Nginx\n给电脑装了个Nginx，预计以后会用到，以后，对，很久以后\n#### PHP\n简单了解了一下PHP，还不错，但并没有计划深入学习\n> PHP是最好的语言！\n（逃\n#### Golang\n研究了下go，发现这个语言离我有点远，目前没有需求\n#### Python外包软件\n因为刷知乎，所以了解到这个很赚钱，于是就去淘宝套了一个中介，问了下行情，打算高考完整一整，赚点钱买服务器，有助于后期研究，不然Golang永远都会离我很远（\n下面简单介绍下我了解到的行情\n> 一个微博搜索关键词的py程序，大概500，中介会抽取40-60%\n这对我来说比较理想，虽然我不知道程序猿行业是怎么样的，至少我觉得比较满意\n#### Arduino开发单片机\n这个东西不错，不到一天就入门了，打算抽时间做个badusb，另外还可以做一些浪漫的东西给小姐姐（划掉）\n计算了一下，如果给别人送礼物的话，大概是这样价格：\n```\nSTM32___15RMB以内\n蜂鸣器___3RMB以内\n电池_三节华泰够用了___2RMB（多送一节）\nLED___3RMB以内\n```\n保守算的话23RMB以内可以解决，还是比较实惠的\n\n#### live Linux\n想找一个满足自己需要，可以装在口袋里的Linux，作为随身使用，但找了一圈都没有适合的，看来只能自己用Arch配了，高考完再说吧\n\n#### 优酸乳味的资源库\n对，这就是我整了好长时间的资源库，资源贼多，现在基本可以公开了，但出于安全考虑，低调进行吧，人身安全和域名安全（防狙击）。\n起名的话，以前是resource library，为了适配小屏，缩短了名字，又刚好一个关系特别好的朋友wx和Q昵称叫优酸乳味的**，于是，这个名字就诞生了，奥对，英文名SourLib，就是从初始名字缩来的，因为初始名开头res所以网址没变[lakphy.me/res](https://lakphy.github.io/res)\n#### 换域名了啊\n忘了说这事了，以前后缀cf，现在me，这个我挑了老半天，就图这个me\n感谢wenzel Tian帮忙购买\n另外GoDaddy坑太深，以后千万别去，namecheap多香啊\n## emmm就是这么多了，祝高考顺利ᕦʕ •ᴥ•ʔᕤ\n","tags":["技术杂谈"]},{"title":"Hexo博客框架踩坑记录","url":"/blog/2019/06/09/Hexo博客框架踩坑记录/","content":"\n# 开始创建你的博客\n\n先为你的博客创建一个文件夹，这里不建议使用你的git文件夹，因为最终导出文件和这里要用的源文件不一样。\n\n## 前提条件\n\n确保你的设备上有以下几个软件包\n\nnodejs\n\nnpm\n\nvim\n\n如果没有，可以通过下面命令安装\n\n```\napt install //软件包名\n```\n\n## 安装hexo\n\n如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。\n\n```\nnpm install -g hexo-cli\n```\n\n# 正式开始建站   /逃(\n\n安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。\n\n```\nhexo init //文件夹目录\ncd //文件夹目录\n```\n\n新建完成后，指定文件夹的目录如下：\n\n```\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n# 配置hexo\n\n下面开始配置hexo，这里只讲述初次使用者必需的部分，更多内容请访问[hexo官方网站](https://hexo.io)。\n\n您可以在 `_config.yml` 中修改大部分的配置。\n\n| 参数        | 描述                                        |\n| ----------- | ------------------------------------------- |\n| title       | 网站标题                                    |\n| subtitle    | 网站副标题                                  |\n| description | 网站描述                                    |\n| author      | 您的名字                                    |\n| language    | 网站使用的语言                              |\n| timezone    | 网站时区（默认根据您当前时区而定，无需设置) |\n\n其中，`description`主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。`author`参数用于主题显示文章的作者。\n\n| 参数                 | 描述                                                         | 默认值                      |\n| -------------------- | ------------------------------------------------------------ | --------------------------- |\n| `url`                | 网址                                                         |                             |\n| `root`               | 网站根目录                                                   |                             |\n| `permalink`          | 文章的 [永久链接](https://hexo.io/zh-cn/docs/permalinks) 格式 | `:year/:month/:day/:title/` |\n| `permalink_defaults` | 永久链接中各部分的默认值                                     |                             |\n\n#### 网站存放在子目录\n\n如果您的网站存放在子目录中，例如 `http://yoursite.com/blog`，则请将您的 `url` 设为 `http://yoursite.com/blog` 并把 `root` 设为 `/blog/`。\n\n# 创建您的第一条博文\n\n您的所有博文源文件都在/source/_posts/中，都通过ｍｄ语法编写\n\n```\nhexo new \"这里写博文名\"\n```\n\n通过上面命令可以创造一个新的博文，您可以使用ｍｄ语法编写博文\n\n# 部署网站\n\n通过下面命令部署您的博客到http://localhost:4000\n\n```\nhexo server\n```\n\n# 生成博客静态文件\n\n如果您需要生成静态文件以上传到ｇｉｔｈｕｂ，您可以通过以下命令生成静态文件\n\n```\nhexo generate\n```\n\n生成的静态文件将会出现在publish文件夹内，您可以将ｐｕｂｌｉｓｈ文件夹内内容直接复制到ｇｉｔｈｕｂ。\n\n# FAQ\n\n目前仅发现一个常见问题：\n\n在 `_config.yml` 中\n\n如果您的网站存放在子目录中，例如 `http://yoursite.com/blog`，则请将您的 `url` 设为 `http://yoursite.com/blog` 并把 `root` 设为 `/blog/`。\n\n# 关于主题\n\n我使用的主题为hexo-casper，在github star 排行榜中挺靠前，中文文档链接　https://zhih.me/hexo-casper-usage/\n\n使用方法在文档中将会有呈现\n\n# 完成\n\n至此，您已完成博客构建，感谢观看。","tags":["踩坑记录"]},{"title":"Github踩坑记录","url":"/blog/2019/06/09/Github踩坑记录/","content":"我在手机上使用github的时候遇到了不少坑，当然最后都使用搜索引擎解决了，为了免得自己遗忘，特作此博文。\n\n## 开始使用\n\n我的手机没有root（主力机不敢root），所以我的git在sd卡目录中，并专门设立一个叫1024的文件夹放git，如果你们的目录不一样，可以随意修改。\n\n```\napt install git\napt install vim\napt install openssh\n```\n\n以上代码用于安装所需基本工具。\n\n## 建立git目录\n\n首先要设置你的邮箱和名字，应该是要和GitHub上设置的相同。\n\n```\ngit config --global user.name \"your name\"\ngit config --global user.email \"email@example.com\"\n```\n\n上面的命令引号内替换为自己的名字和邮箱 下一步建立git仓库的目录\n\n先cd到想要放git的目录\n\n我的目录是/sdcard/1024，所以要用命令：\n\n```\ncd /sdcard/1024\n```\n\n使用下面的指令，让这个文件夹变为git可以管理的仓库（这个文件夹一定要是空的）\n\n```\ngit init\n```\n\n这个指令使用成功后，文件夹下会多出来一个.git的文件夹\n\n## 上传文件到仓库\n\n下面我们上传文件到仓库 第一步，\n\n使用git add 如果只添加某个文件，\n\n如example.txt，则使用：\n\n```\ngit add example.txt\n```\n\n如果想把文件夹内文件全部添加（包括子文件夹），则使用：\n\n```\ngit add .\n```\n\n第二步，上传到本地仓库\n\n```\ngit commit -m \"这里写日志\"\n```\n\n引号内写日志，不可省略或不写！！！\n\n至此，关于git的大部分内容已讲完，如想了解更多git工作的教程，请访问网站：[廖雪峰的网站](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013743858312764dca7ad6d0754f76aa562e3789478044000)，这是我找到的介绍比较全的网站\n\n## 上传到远程仓库\n\n首先通过ssh连接远程仓库，以GitHub为例。 \n\n我们已经安装了openssh，所以可以通过以下指令获取ssh代码：\n\n```\nssh-keygen -t rsa -C \"email@example.com\"\n```\n\n同样，引号内写邮箱 \n\n然后根据它的提示，找到id_rsa.pub文件所在目录，用vim打开\n\n```\nvim //后面加id_rsa.pub的文件地址\n```\n\nvim会打开这个文件，将里面所有代码复制出来即可。\n退出vim：确保自己没瞎jb按，然后输:q退出。\n\n然后打开GitHub，新建仓库，进入设置，打开ssh keys，新建，然后随便写一个标题，复制代码进去，点确认，OK。\n\n然后使用指令：\n\n```\ngit remote add origin https://github.com/lakphy/text.git\n```\n\n其中，lakphy是我的github名，text是仓库名，自己根据自己实际情况作修改。\n\n然后使用指令：\n\n```\ngit pull origin master\ngit push origin master\n```\n\n## 完成\n\n打开github即可看到代码已经上传成功了！","tags":["踩坑记录"]},{"title":"第一篇博文","url":"/blog/2019/06/09/第一篇博文/","content":"这里是第一篇博文","tags":["水博文"]}]